

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 03 13:08:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 22/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0008                     _PORTDbits	set	8
   379     0008                     _PORTD	set	8
   380     0013                     _SSPBUF	set	19
   381     0014                     _SSPCON	set	20
   382     0043                     _RD3	set	67
   383     0047                     _RD7	set	71
   384     0046                     _RD6	set	70
   385     0045                     _RD5	set	69
   386     0044                     _RD4	set	68
   387     0038                     _RC0	set	56
   388     0039                     _RC1	set	57
   389     0087                     _TRISC	set	135
   390     008F                     _OSCCONbits	set	143
   391     0088                     _TRISD	set	136
   392     0094                     _SSPSTATbits	set	148
   393     0094                     _SSPSTAT	set	148
   394     0478                     _SCS	set	1144
   395     043B                     _TRISC3	set	1083
   396     043D                     _TRISC5	set	1085
   397     0189                     _ANSELH	set	393
   398     0188                     _ANSEL	set	392
   399                           
   400                           	psect	strings
   401     037C                     __pstrings:
   402     037C                     stringtab:
   403     037C                     __stringtab:
   404                           
   405                           ;	String table - string pointers are 1 byte each
   406     037C  1BFF               	btfsc	btemp+1,7
   407     037D  2B86               	ljmp	stringcode
   408     037E  1383               	bcf	3,7
   409     037F  187F               	btfsc	btemp+1,0
   410     0380  1783               	bsf	3,7
   411     0381  0800               	movf	0,w
   412     0382  0A84               	incf	4,f
   413     0383  1903               	skipnz
   414     0384  0AFF               	incf	btemp+1,f
   415     0385  0008               	return
   416     0386                     stringcode:
   417     0386                     stringdir:
   418     0386  3003               	movlw	high stringdir
   419     0387  008A               	movwf	10
   420     0388  0804               	movf	4,w
   421     0389  0A84               	incf	4,f
   422     038A  0782               	addwf	2,f
   423     038B                     __stringbase:
   424     038B  3400               	retlw	0
   425     038C                     __end_of__stringtab:
   426     038C                     STR_1:
   427     038C  3450               	retlw	80	;'P'
   428     038D  3430               	retlw	48	;'0'
   429     038E  343A               	retlw	58	;':'
   430     038F  3420               	retlw	32	;' '
   431     0390  3400               	retlw	0
   432     0391                     STR_2:
   433     0391  3450               	retlw	80	;'P'
   434     0392  3431               	retlw	49	;'1'
   435     0393  343A               	retlw	58	;':'
   436     0394  3420               	retlw	32	;' '
   437     0395  3400               	retlw	0
   438     0396                     STR_3:
   439     0396  3443               	retlw	67	;'C'
   440     0397  343A               	retlw	58	;':'
   441     0398  3420               	retlw	32	;' '
   442     0399  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445     000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448     000F                     __initialization:
   449                           
   450                           ; Clear objects allocated to COMMON
   451     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   452     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455     0011  1283               	bcf	3,5	;RP0=0, select bank0
   456     0012  1303               	bcf	3,6	;RP1=0, select bank0
   457     0013  01A0               	clrf	__pbssBANK0& (0+127)
   458     0014  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   459     0015  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   460     0016  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   461     0017  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   462     0018  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   463     0019  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   464     001A  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   465     001B  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   466     001C  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   467     001D  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   468     001E  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   469     001F  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   470     0020                     end_of_initialization:	
   471                           ;End of C runtime variable initialization code
   472                           
   473     0020                     __end_of__initialization:
   474     0020  0183               	clrf	3
   475     0021  120A  118A  2BCA   	ljmp	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMMON
   478     007A                     __pbssCOMMON:
   479     007A                     _pot1:
   480     007A                     	ds	1
   481     007B                     _pot0:
   482     007B                     	ds	1
   483                           
   484                           	psect	bssBANK0
   485     0020                     __pbssBANK0:
   486     0020                     _count:
   487     0020                     	ds	1
   488     0021                     _count_s:
   489     0021                     	ds	4
   490     0025                     _pot1_s:
   491     0025                     	ds	4
   492     0029                     _pot0_s:
   493     0029                     	ds	4
   494                           
   495                           	psect	cstackCOMMON
   496     0070                     __pcstackCOMMON:
   497     0070                     ?_setup:
   498     0070                     ?_requestValues:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_outputValues:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_Lcd_Init:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_spiReceiveWait:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_spiWrite:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_spiRead:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_isr:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ??_isr:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_Lcd_Port:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_Lcd_Cmd:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_Lcd_Write_Char:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_main:	
   532                           ; 1 bytes @ 0x0
   533                           
   534                           
   535                           ; 2 bytes @ 0x0
   536     0070                     	ds	2
   537     0072                     ?_spiInit:
   538     0072                     ??_spiReceiveWait:	
   539                           ; 1 bytes @ 0x2
   540                           
   541     0072                     ??_spiWrite:	
   542                           ; 1 bytes @ 0x2
   543                           
   544     0072                     ??_spiRead:	
   545                           ; 1 bytes @ 0x2
   546                           
   547     0072                     ??_Lcd_Port:	
   548                           ; 1 bytes @ 0x2
   549                           
   550     0072                     ?___awdiv:	
   551                           ; 1 bytes @ 0x2
   552                           
   553     0072                     ?___awmod:	
   554                           ; 2 bytes @ 0x2
   555                           
   556     0072                     spiInit@sDataSample:	
   557                           ; 2 bytes @ 0x2
   558                           
   559     0072                     spiWrite@dat:	
   560                           ; 1 bytes @ 0x2
   561                           
   562     0072                     Lcd_Port@a:	
   563                           ; 1 bytes @ 0x2
   564                           
   565     0072                     ___awdiv@divisor:	
   566                           ; 1 bytes @ 0x2
   567                           
   568     0072                     ___awmod@divisor:	
   569                           ; 2 bytes @ 0x2
   570                           
   571                           
   572                           ; 2 bytes @ 0x2
   573     0072                     	ds	1
   574     0073                     ??_requestValues:
   575     0073                     ??_Lcd_Cmd:	
   576                           ; 1 bytes @ 0x3
   577                           
   578     0073                     ??_Lcd_Write_Char:	
   579                           ; 1 bytes @ 0x3
   580                           
   581     0073                     spiInit@sClockIdle:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586     0073                     	ds	1
   587     0074                     spiInit@sTransmitEdge:
   588     0074                     Lcd_Write_Char@temp:	
   589                           ; 1 bytes @ 0x4
   590                           
   591     0074                     ___awdiv@dividend:	
   592                           ; 1 bytes @ 0x4
   593                           
   594     0074                     ___awmod@dividend:	
   595                           ; 2 bytes @ 0x4
   596                           
   597                           
   598                           ; 2 bytes @ 0x4
   599     0074                     	ds	1
   600     0075                     ??_spiInit:
   601     0075                     spiInit@sType:	
   602                           ; 1 bytes @ 0x5
   603                           
   604     0075                     Lcd_Cmd@a:	
   605                           ; 1 bytes @ 0x5
   606                           
   607     0075                     Lcd_Write_Char@y:	
   608                           ; 1 bytes @ 0x5
   609                           
   610                           
   611                           ; 1 bytes @ 0x5
   612     0075                     	ds	1
   613     0076                     ??_Lcd_Init:
   614     0076                     ?_Lcd_Set_Cursor:	
   615                           ; 1 bytes @ 0x6
   616                           
   617     0076                     ??___awdiv:	
   618                           ; 1 bytes @ 0x6
   619                           
   620     0076                     ??___awmod:	
   621                           ; 1 bytes @ 0x6
   622                           
   623     0076                     Lcd_Set_Cursor@b:	
   624                           ; 1 bytes @ 0x6
   625                           
   626     0076                     Lcd_Write_Char@a:	
   627                           ; 1 bytes @ 0x6
   628                           
   629     0076                     ___awdiv@counter:	
   630                           ; 1 bytes @ 0x6
   631                           
   632     0076                     ___awmod@counter:	
   633                           ; 1 bytes @ 0x6
   634                           
   635                           
   636                           ; 1 bytes @ 0x6
   637     0076                     	ds	1
   638     0077                     ??_Lcd_Set_Cursor:
   639     0077                     ?_Lcd_Write_String:	
   640                           ; 1 bytes @ 0x7
   641                           
   642     0077                     ___awdiv@sign:	
   643                           ; 1 bytes @ 0x7
   644                           
   645     0077                     ___awmod@sign:	
   646                           ; 1 bytes @ 0x7
   647                           
   648     0077                     Lcd_Write_String@a:	
   649                           ; 1 bytes @ 0x7
   650                           
   651                           
   652                           ; 2 bytes @ 0x7
   653     0077                     	ds	1
   654     0078                     ??_setup:
   655     0078                     ___awdiv@quotient:	
   656                           ; 1 bytes @ 0x8
   657                           
   658                           
   659                           ; 2 bytes @ 0x8
   660     0078                     	ds	2
   661     007A                     ??_outputValues:
   662     007A                     ??_main:	
   663                           ; 1 bytes @ 0xA
   664                           
   665                           
   666                           	psect	cstackBANK0
   667     002D                     __pcstackBANK0:	
   668                           ; 1 bytes @ 0xA
   669                           
   670     002D                     ?_separar_digitos8:
   671     002D                     ??_Lcd_Write_String:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     002D                     separar_digitos8@dig8:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     002D                     Lcd_Set_Cursor@a:	
   678                           ; 1 bytes @ 0x0
   679                           
   680                           
   681                           ; 1 bytes @ 0x0
   682     002D                     	ds	1
   683     002E                     ??_separar_digitos8:
   684     002E                     Lcd_Set_Cursor@z:	
   685                           ; 1 bytes @ 0x1
   686                           
   687                           
   688                           ; 1 bytes @ 0x1
   689     002E                     	ds	1
   690     002F                     Lcd_Set_Cursor@y:
   691                           
   692                           ; 1 bytes @ 0x2
   693     002F                     	ds	1
   694     0030                     separar_digitos8@div2:
   695     0030                     Lcd_Set_Cursor@temp:	
   696                           ; 1 bytes @ 0x3
   697                           
   698     0030                     Lcd_Write_String@i:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 2 bytes @ 0x3
   703     0030                     	ds	1
   704     0031                     separar_digitos8@centenas:
   705                           
   706                           ; 1 bytes @ 0x4
   707     0031                     	ds	1
   708     0032                     separar_digitos8@decenas:
   709                           
   710                           ; 1 bytes @ 0x5
   711     0032                     	ds	1
   712     0033                     separar_digitos8@unidades:
   713                           
   714                           ; 1 bytes @ 0x6
   715     0033                     	ds	1
   716     0034                     separar_digitos8@num:
   717                           
   718                           ; 1 bytes @ 0x7
   719     0034                     	ds	1
   720     0035                     separar_digitos8@div1:
   721                           
   722                           ; 1 bytes @ 0x8
   723     0035                     	ds	1
   724                           
   725                           	psect	maintext
   726     03CA                     __pmaintext:	
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 59 in file "Prelab3_Master.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  2   95[None  ] int 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : B00/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels required when called: 5
   752 ;; This function calls:
   753 ;;		_outputValues
   754 ;;		_requestValues
   755 ;;		_setup
   756 ;; This function is called by:
   757 ;;		Startup code after reset
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     03CA                     _main:	
   762                           ;psect for function _main
   763                           
   764     03CA                     l1370:	
   765                           ;incstack = 0
   766                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   767                           
   768                           
   769                           ;Prelab3_Master.c: 60:     RC0 = 1;
   770     03CA  120A  118A  2338  120A  118A  	fcall	_setup
   771     03CF                     l96:	
   772                           ;Prelab3_Master.c: 61:     RC1 = 0;
   773                           
   774                           
   775                           ;Prelab3_Master.c: 63:     _delay((unsigned long)((10)*(8000000/4000.0)));
   776     03CF  120A  118A  2273  120A  118A  	fcall	_requestValues
   777     03D4                     l1372:
   778                           
   779                           ;Prelab3_Master.c: 64:     pot1 = spiRead();
   780     03D4  120A  118A  209D  120A  118A  	fcall	_outputValues
   781     03D9  2BCF               	goto	l96
   782     03DA  120A  118A  280C   	ljmp	start
   783     03DD                     __end_of_main:
   784                           
   785                           	psect	text1
   786     0338                     __ptext1:	
   787 ;; *************** function _setup *****************
   788 ;; Defined at:
   789 ;;		line 68 in file "Prelab3_Master.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 4
   810 ;; This function calls:
   811 ;;		_Lcd_Init
   812 ;;		_spiInit
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818     0338                     _setup:	
   819                           ;psect for function _setup
   820                           
   821     0338                     l1342:	
   822                           ;incstack = 0
   823                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   824                           
   825                           
   826                           ;Prelab3_Master.c: 69:     count = spiRead();
   827     0338  1683               	bsf	3,5	;RP0=1, select bank3
   828     0339  1703               	bsf	3,6	;RP1=1, select bank3
   829     033A  0188               	clrf	8	;volatile
   830                           
   831                           ;Prelab3_Master.c: 70: }
   832     033B  0189               	clrf	9	;volatile
   833                           
   834                           ;Prelab3_Master.c: 72: void outputValues(void){
   835     033C  1683               	bsf	3,5	;RP0=1, select bank1
   836     033D  1303               	bcf	3,6	;RP1=0, select bank1
   837     033E  0188               	clrf	8	;volatile
   838                           
   839                           ;Prelab3_Master.c: 73: 
   840     033F  1283               	bcf	3,5	;RP0=0, select bank0
   841     0340  1303               	bcf	3,6	;RP1=0, select bank0
   842     0341  0188               	clrf	8	;volatile
   843     0342                     l1344:
   844                           
   845                           ;Prelab3_Master.c: 76:     separar_digitos8(count,count_s);
   846     0342  3070               	movlw	112
   847     0343  1683               	bsf	3,5	;RP0=1, select bank1
   848     0344  1303               	bcf	3,6	;RP1=0, select bank1
   849     0345  048F               	iorwf	15,f	;volatile
   850     0346                     l1346:
   851                           
   852                           ;Prelab3_Master.c: 77: 
   853     0346  140F               	bsf	15,0	;volatile
   854     0347                     l1348:
   855                           
   856                           ;Prelab3_Master.c: 80:     Lcd_Write_String("P0: ");
   857     0347  120A  118A  2171  120A  118A  	fcall	_Lcd_Init
   858     034C                     l1350:
   859                           
   860                           ;Prelab3_Master.c: 83:     Lcd_Write_String("P1: ");
   861     034C  30D4               	movlw	212
   862     034D  1683               	bsf	3,5	;RP0=1, select bank1
   863     034E  1303               	bcf	3,6	;RP1=0, select bank1
   864     034F  0087               	movwf	7	;volatile
   865     0350                     l1352:
   866                           
   867                           ;Prelab3_Master.c: 84:     Lcd_Write_String(pot1_s);
   868     0350  01F2               	clrf	spiInit@sDataSample
   869     0351  01F3               	clrf	spiInit@sClockIdle
   870     0352  01F4               	clrf	spiInit@sTransmitEdge
   871     0353  3020               	movlw	32
   872     0354  120A  118A  23B4  120A  118A  	fcall	_spiInit
   873     0359                     l102:
   874     0359  0008               	return
   875     035A                     __end_of_setup:
   876                           
   877                           	psect	text2
   878     03B4                     __ptext2:	
   879 ;; *************** function _spiInit *****************
   880 ;; Defined at:
   881 ;;		line 12 in file "../../../LibreriasPIC/SPI.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  sType           1    wreg     enum E1292
   884 ;;  sDataSample     1    2[COMMON] enum E1300
   885 ;;  sClockIdle      1    3[COMMON] enum E1304
   886 ;;  sTransmitEdg    1    4[COMMON] enum E1308
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  sType           1    5[COMMON] enum E1292
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         3       0       0       0       0
   899 ;;      Locals:         1       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         4       0       0       0       0
   902 ;;Total ram usage:        4 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_setup
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912     03B4                     _spiInit:	
   913                           ;psect for function _spiInit
   914                           
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   918                           ;spiInit@sType stored from wreg
   919     03B4  00F5               	movwf	spiInit@sType
   920     03B5                     l1134:
   921                           
   922                           ;../../../LibreriasPIC/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSamp
      +                          le, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../../../LibreriasPIC/SP
      +                          I.c: 13: {;../../../LibreriasPIC/SPI.c: 14:     TRISC5 = 0;
   923     03B5  1683               	bsf	3,5	;RP0=1, select bank1
   924     03B6  1303               	bcf	3,6	;RP1=0, select bank1
   925     03B7  1287               	bcf	7,5	;volatile
   926                           
   927                           ;../../../LibreriasPIC/SPI.c: 15:     if(sType & 0b00000100)
   928     03B8  1D75               	btfss	spiInit@sType,2
   929     03B9  2BBB               	goto	u591
   930     03BA  2BBC               	goto	u590
   931     03BB                     u591:
   932     03BB  2BC0               	goto	l1140
   933     03BC                     u590:
   934     03BC                     l1136:
   935                           
   936                           ;../../../LibreriasPIC/SPI.c: 16:     {;../../../LibreriasPIC/SPI.c: 17:         SSPSTAT
      +                           = sTransmitEdge;
   937     03BC  0874               	movf	spiInit@sTransmitEdge,w
   938     03BD  0094               	movwf	20	;volatile
   939     03BE                     l1138:
   940                           
   941                           ;../../../LibreriasPIC/SPI.c: 18:         TRISC3 = 1;
   942     03BE  1587               	bsf	7,3	;volatile
   943                           
   944                           ;../../../LibreriasPIC/SPI.c: 19:     }
   945     03BF  2BC4               	goto	l16
   946     03C0                     l1140:
   947                           
   948                           ;../../../LibreriasPIC/SPI.c: 21:     {;../../../LibreriasPIC/SPI.c: 22:         SSPSTAT
      +                           = sDataSample | sTransmitEdge;
   949     03C0  0872               	movf	spiInit@sDataSample,w
   950     03C1  0474               	iorwf	spiInit@sTransmitEdge,w
   951     03C2  0094               	movwf	20	;volatile
   952     03C3                     l1142:
   953                           
   954                           ;../../../LibreriasPIC/SPI.c: 23:         TRISC3 = 0;
   955     03C3  1187               	bcf	7,3	;volatile
   956     03C4                     l16:	
   957                           ;../../../LibreriasPIC/SPI.c: 24:     }
   958                           
   959                           
   960                           ;../../../LibreriasPIC/SPI.c: 26:     SSPCON = sType | sClockIdle;
   961     03C4  0875               	movf	spiInit@sType,w
   962     03C5  0473               	iorwf	spiInit@sClockIdle,w
   963     03C6  1283               	bcf	3,5	;RP0=0, select bank0
   964     03C7  1303               	bcf	3,6	;RP1=0, select bank0
   965     03C8  0094               	movwf	20	;volatile
   966     03C9                     l17:
   967     03C9  0008               	return
   968     03CA                     __end_of_spiInit:
   969                           
   970                           	psect	text3
   971     0171                     __ptext3:	
   972 ;; *************** function _Lcd_Init *****************
   973 ;; Defined at:
   974 ;;		line 65 in file "LCD.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          2       0       0       0       0
   991 ;;      Totals:         2       0       0       0       0
   992 ;;Total ram usage:        2 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 3
   995 ;; This function calls:
   996 ;;		_Lcd_Cmd
   997 ;;		_Lcd_Port
   998 ;; This function is called by:
   999 ;;		_setup
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003     0171                     _Lcd_Init:	
  1004                           ;psect for function _Lcd_Init
  1005                           
  1006     0171                     l1296:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1009                           
  1010                           
  1011                           ;LCD.c: 66:     Lcd_Port(0x00);
  1012     0171  3000               	movlw	0
  1013     0172  120A  118A  235A  120A  118A  	fcall	_Lcd_Port
  1014     0177                     l1298:
  1015                           
  1016                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1017     0177  3034               	movlw	52
  1018     0178  00F7               	movwf	??_Lcd_Init+1
  1019     0179  30F1               	movlw	241
  1020     017A  00F6               	movwf	??_Lcd_Init
  1021     017B                     u797:
  1022     017B  0BF6               	decfsz	??_Lcd_Init,f
  1023     017C  297B               	goto	u797
  1024     017D  0BF7               	decfsz	??_Lcd_Init+1,f
  1025     017E  297B               	goto	u797
  1026     017F  2980               	nop2
  1027     0180                     l1300:
  1028                           
  1029                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1030     0180  3003               	movlw	3
  1031     0181  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1032                           
  1033                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1034     0186  300D               	movlw	13
  1035     0187  00F7               	movwf	??_Lcd_Init+1
  1036     0188  30FB               	movlw	251
  1037     0189  00F6               	movwf	??_Lcd_Init
  1038     018A                     u807:
  1039     018A  0BF6               	decfsz	??_Lcd_Init,f
  1040     018B  298A               	goto	u807
  1041     018C  0BF7               	decfsz	??_Lcd_Init+1,f
  1042     018D  298A               	goto	u807
  1043     018E  298F               	nop2
  1044     018F                     l1302:
  1045                           
  1046                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1047     018F  3003               	movlw	3
  1048     0190  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1049     0195                     l1304:
  1050                           
  1051                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1052     0195  301D               	movlw	29
  1053     0196  00F7               	movwf	??_Lcd_Init+1
  1054     0197  3091               	movlw	145
  1055     0198  00F6               	movwf	??_Lcd_Init
  1056     0199                     u817:
  1057     0199  0BF6               	decfsz	??_Lcd_Init,f
  1058     019A  2999               	goto	u817
  1059     019B  0BF7               	decfsz	??_Lcd_Init+1,f
  1060     019C  2999               	goto	u817
  1061                           
  1062                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1063     019D  3003               	movlw	3
  1064     019E  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1065                           
  1066                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1067     01A3  3002               	movlw	2
  1068     01A4  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1069                           
  1070                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1071     01A9  3002               	movlw	2
  1072     01AA  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1073                           
  1074                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1075     01AF  3008               	movlw	8
  1076     01B0  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1077                           
  1078                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1079     01B5  3000               	movlw	0
  1080     01B6  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1081                           
  1082                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1083     01BB  300C               	movlw	12
  1084     01BC  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1085                           
  1086                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1087     01C1  3000               	movlw	0
  1088     01C2  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1089                           
  1090                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1091     01C7  3006               	movlw	6
  1092     01C8  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  1093     01CD                     l151:
  1094     01CD  0008               	return
  1095     01CE                     __end_of_Lcd_Init:
  1096                           
  1097                           	psect	text4
  1098     0273                     __ptext4:	
  1099 ;; *************** function _requestValues *****************
  1100 ;; Defined at:
  1101 ;;		line 87 in file "Prelab3_Master.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0, pclath, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1115 ;;      Params:         0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0
  1117 ;;      Temps:          2       0       0       0       0
  1118 ;;      Totals:         2       0       0       0       0
  1119 ;;Total ram usage:        2 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 3
  1122 ;; This function calls:
  1123 ;;		_spiRead
  1124 ;;		_spiWrite
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130     0273                     _requestValues:	
  1131                           ;psect for function _requestValues
  1132                           
  1133     0273                     l1210:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _requestValues: [wreg+status,2+status,0+pclath+cstack]
  1136                           
  1137                           
  1138                           ;Prelab3_Master.c: 89: }
  1139     0273  1283               	bcf	3,5	;RP0=0, select bank0
  1140     0274  1303               	bcf	3,6	;RP1=0, select bank0
  1141     0275  1487               	bsf	7,1	;volatile
  1142                           
  1143                           ;Prelab3_Master.c: 90: 
  1144     0276  1007               	bcf	7,0	;volatile
  1145     0277                     l1212:
  1146                           
  1147                           ;Prelab3_Master.c: 91: void separar_digitos8(uint8_t num, char dig8[]){
  1148     0277  3050               	movlw	80
  1149     0278  120A  118A  23F4  120A  118A  	fcall	_spiWrite
  1150     027D                     l1214:
  1151                           
  1152                           ;Prelab3_Master.c: 92:     uint8_t div1,div2,div3,centenas,decenas,unidades;
  1153     027D  301A               	movlw	26
  1154     027E  00F4               	movwf	??_requestValues+1
  1155     027F  30F8               	movlw	248
  1156     0280  00F3               	movwf	??_requestValues
  1157     0281                     u827:
  1158     0281  0BF3               	decfsz	??_requestValues,f
  1159     0282  2A81               	goto	u827
  1160     0283  0BF4               	decfsz	??_requestValues+1,f
  1161     0284  2A81               	goto	u827
  1162     0285  0000               	nop
  1163     0286                     l1216:
  1164                           
  1165                           ;Prelab3_Master.c: 93:     div1 = num / 10;
  1166     0286  120A  118A  23DD  120A  118A  	fcall	_spiRead
  1167     028B  00FB               	movwf	_pot0
  1168     028C                     l1218:
  1169                           
  1170                           ;Prelab3_Master.c: 96:     decenas = div1 % 10;
  1171     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1172     028D  1303               	bcf	3,6	;RP1=0, select bank0
  1173     028E  1407               	bsf	7,0	;volatile
  1174     028F                     l1220:
  1175                           
  1176                           ;Prelab3_Master.c: 97:     centenas = div2 % 10;
  1177     028F  1087               	bcf	7,1	;volatile
  1178     0290                     l1222:
  1179                           
  1180                           ;Prelab3_Master.c: 98: 
  1181     0290  3050               	movlw	80
  1182     0291  120A  118A  23F4  120A  118A  	fcall	_spiWrite
  1183     0296                     l1224:
  1184                           
  1185                           ;Prelab3_Master.c: 99:     dig8[2] = unidades + 0x30;
  1186     0296  301A               	movlw	26
  1187     0297  00F4               	movwf	??_requestValues+1
  1188     0298  30F8               	movlw	248
  1189     0299  00F3               	movwf	??_requestValues
  1190     029A                     u837:
  1191     029A  0BF3               	decfsz	??_requestValues,f
  1192     029B  2A9A               	goto	u837
  1193     029C  0BF4               	decfsz	??_requestValues+1,f
  1194     029D  2A9A               	goto	u837
  1195     029E  0000               	nop
  1196                           
  1197                           ;Prelab3_Master.c: 100:     dig8[1] = decenas + 0x30;
  1198     029F  120A  118A  23DD  120A  118A  	fcall	_spiRead
  1199     02A4  00FA               	movwf	_pot1
  1200     02A5  3043               	movlw	67
  1201     02A6  120A  118A  23F4  120A  118A  	fcall	_spiWrite
  1202     02AB                     l1226:
  1203     02AB  301A               	movlw	26
  1204     02AC  00F4               	movwf	??_requestValues+1
  1205     02AD  30F8               	movlw	248
  1206     02AE  00F3               	movwf	??_requestValues
  1207     02AF                     u847:
  1208     02AF  0BF3               	decfsz	??_requestValues,f
  1209     02B0  2AAF               	goto	u847
  1210     02B1  0BF4               	decfsz	??_requestValues+1,f
  1211     02B2  2AAF               	goto	u847
  1212     02B3  0000               	nop
  1213     02B4                     l1228:
  1214     02B4  120A  118A  23DD  120A  118A  	fcall	_spiRead
  1215     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1216     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1217     02BB  00A0               	movwf	_count
  1218     02BC                     l105:
  1219     02BC  0008               	return
  1220     02BD                     __end_of_requestValues:
  1221                           
  1222                           	psect	text5
  1223     03F4                     __ptext5:	
  1224 ;; *************** function _spiWrite *****************
  1225 ;; Defined at:
  1226 ;;		line 34 in file "../../../LibreriasPIC/SPI.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  dat             1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  dat             1    2[COMMON] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         1       0       0       0       0
  1244 ;;Total ram usage:        1 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_requestValues
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254     03F4                     _spiWrite:	
  1255                           ;psect for function _spiWrite
  1256                           
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _spiWrite: [wreg]
  1260                           ;spiWrite@dat stored from wreg
  1261     03F4  00F2               	movwf	spiWrite@dat
  1262     03F5                     l1144:
  1263                           
  1264                           ;../../../LibreriasPIC/SPI.c: 34: void spiWrite(char dat);../../../LibreriasPIC/SPI.c: 3
      +                          5: {;../../../LibreriasPIC/SPI.c: 36:     SSPBUF = dat;
  1265     03F5  0872               	movf	spiWrite@dat,w
  1266     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1267     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1268     03F8  0093               	movwf	19	;volatile
  1269     03F9                     l26:
  1270     03F9  0008               	return
  1271     03FA                     __end_of_spiWrite:
  1272                           
  1273                           	psect	text6
  1274     03DD                     __ptext6:	
  1275 ;; *************** function _spiRead *****************
  1276 ;; Defined at:
  1277 ;;		line 47 in file "../../../LibreriasPIC/SPI.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      unsigned char 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0, pclath, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0
  1294 ;;      Totals:         0       0       0       0       0
  1295 ;;Total ram usage:        0 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 2
  1298 ;; This function calls:
  1299 ;;		_spiReceiveWait
  1300 ;; This function is called by:
  1301 ;;		_requestValues
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305     03DD                     _spiRead:	
  1306                           ;psect for function _spiRead
  1307                           
  1308     03DD                     l1146:	
  1309                           ;incstack = 0
  1310                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1311                           
  1312                           
  1313                           ;../../../LibreriasPIC/SPI.c: 49:     spiReceiveWait();
  1314     03DD  120A  118A  23E6  120A  118A  	fcall	_spiReceiveWait
  1315     03E2                     l1148:
  1316                           
  1317                           ;../../../LibreriasPIC/SPI.c: 50:     return(SSPBUF);
  1318     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1319     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1320     03E4  0813               	movf	19,w	;volatile
  1321     03E5                     l34:
  1322     03E5  0008               	return
  1323     03E6                     __end_of_spiRead:
  1324                           
  1325                           	psect	text7
  1326     03E6                     __ptext7:	
  1327 ;; *************** function _spiReceiveWait *****************
  1328 ;; Defined at:
  1329 ;;		line 29 in file "../../../LibreriasPIC/SPI.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		None
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_spiRead
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     03E6                     _spiReceiveWait:	
  1358                           ;psect for function _spiReceiveWait
  1359                           
  1360     03E6                     l1020:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _spiReceiveWait: []
  1363                           
  1364     03E6                     l20:	
  1365                           ;../../../LibreriasPIC/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1366                           
  1367     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1368     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1369     03E8  1C14               	btfss	20,0	;volatile
  1370     03E9  2BEB               	goto	u381
  1371     03EA  2BEC               	goto	u380
  1372     03EB                     u381:
  1373     03EB  2BE6               	goto	l20
  1374     03EC                     u380:
  1375     03EC                     l23:
  1376     03EC  0008               	return
  1377     03ED                     __end_of_spiReceiveWait:
  1378                           
  1379                           	psect	text8
  1380     009D                     __ptext8:	
  1381 ;; *************** function _outputValues *****************
  1382 ;; Defined at:
  1383 ;;		line 108 in file "Prelab3_Master.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 4
  1404 ;; This function calls:
  1405 ;;		_Lcd_Set_Cursor
  1406 ;;		_Lcd_Write_String
  1407 ;;		_separar_digitos8
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413     009D                     _outputValues:	
  1414                           ;psect for function _outputValues
  1415                           
  1416     009D                     l1354:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _outputValues: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1419                           
  1420     009D  3029               	movlw	(low (_pot0_s| 0))& (0+255)
  1421     009E  1283               	bcf	3,5	;RP0=0, select bank0
  1422     009F  1303               	bcf	3,6	;RP1=0, select bank0
  1423     00A0  00AD               	movwf	separar_digitos8@dig8
  1424     00A1  087B               	movf	_pot0,w
  1425     00A2  120A  118A  2024  120A  118A  	fcall	_separar_digitos8
  1426     00A7  3025               	movlw	(low (_pot1_s| 0))& (0+255)
  1427     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1428     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1429     00AA  00AD               	movwf	separar_digitos8@dig8
  1430     00AB  087A               	movf	_pot1,w
  1431     00AC  120A  118A  2024  120A  118A  	fcall	_separar_digitos8
  1432     00B1  3021               	movlw	(low (_count_s| 0))& (0+255)
  1433     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1434     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1435     00B4  00AD               	movwf	separar_digitos8@dig8
  1436     00B5  0820               	movf	_count,w
  1437     00B6  120A  118A  2024  120A  118A  	fcall	_separar_digitos8
  1438     00BB                     l1356:
  1439     00BB  01F6               	clrf	Lcd_Set_Cursor@b
  1440     00BC  0AF6               	incf	Lcd_Set_Cursor@b,f
  1441     00BD  3001               	movlw	1
  1442     00BE  120A  118A  2227  120A  118A  	fcall	_Lcd_Set_Cursor
  1443     00C3                     l1358:
  1444     00C3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1445     00C4  00F7               	movwf	Lcd_Write_String@a
  1446     00C5  3080               	movlw	128
  1447     00C6  00F8               	movwf	Lcd_Write_String@a+1
  1448     00C7  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1449     00CC                     l1360:
  1450     00CC  3029               	movlw	(low (_pot0_s| 0))& (0+255)
  1451     00CD  00F7               	movwf	Lcd_Write_String@a
  1452     00CE  3000               	movlw	0
  1453     00CF  00F8               	movwf	Lcd_Write_String@a+1
  1454     00D0  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1455     00D5                     l1362:
  1456     00D5  01F6               	clrf	Lcd_Set_Cursor@b
  1457     00D6  0AF6               	incf	Lcd_Set_Cursor@b,f
  1458     00D7  3002               	movlw	2
  1459     00D8  120A  118A  2227  120A  118A  	fcall	_Lcd_Set_Cursor
  1460     00DD  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1461     00DE  00F7               	movwf	Lcd_Write_String@a
  1462     00DF  3080               	movlw	128
  1463     00E0  00F8               	movwf	Lcd_Write_String@a+1
  1464     00E1  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1465     00E6  3025               	movlw	(low (_pot1_s| 0))& (0+255)
  1466     00E7  00F7               	movwf	Lcd_Write_String@a
  1467     00E8  3000               	movlw	0
  1468     00E9  00F8               	movwf	Lcd_Write_String@a+1
  1469     00EA  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1470     00EF                     l1364:
  1471     00EF  300B               	movlw	11
  1472     00F0  00F6               	movwf	Lcd_Set_Cursor@b
  1473     00F1  3001               	movlw	1
  1474     00F2  120A  118A  2227  120A  118A  	fcall	_Lcd_Set_Cursor
  1475     00F7                     l1366:
  1476     00F7  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1477     00F8  00F7               	movwf	Lcd_Write_String@a
  1478     00F9  3080               	movlw	128
  1479     00FA  00F8               	movwf	Lcd_Write_String@a+1
  1480     00FB  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1481     0100                     l1368:
  1482     0100  3021               	movlw	(low (_count_s| 0))& (0+255)
  1483     0101  00F7               	movwf	Lcd_Write_String@a
  1484     0102  3000               	movlw	0
  1485     0103  00F8               	movwf	Lcd_Write_String@a+1
  1486     0104  120A  118A  22BD  120A  118A  	fcall	_Lcd_Write_String
  1487     0109                     l108:
  1488     0109  0008               	return
  1489     010A                     __end_of_outputValues:
  1490                           
  1491                           	psect	text9
  1492     0024                     __ptext9:	
  1493 ;; *************** function _separar_digitos8 *****************
  1494 ;; Defined at:
  1495 ;;		line 127 in file "Prelab3_Master.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  num             1    wreg     unsigned char 
  1498 ;;  dig8            1    0[BANK0 ] PTR unsigned char 
  1499 ;;		 -> count_s(4), pot1_s(4), pot0_s(4), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  num             1    7[BANK0 ] unsigned char 
  1502 ;;  div1            1    8[BANK0 ] unsigned char 
  1503 ;;  unidades        1    6[BANK0 ] unsigned char 
  1504 ;;  decenas         1    5[BANK0 ] unsigned char 
  1505 ;;  centenas        1    4[BANK0 ] unsigned char 
  1506 ;;  div2            1    3[BANK0 ] unsigned char 
  1507 ;;  div3            1    0        unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       1       0       0       0
  1518 ;;      Locals:         0       6       0       0       0
  1519 ;;      Temps:          0       2       0       0       0
  1520 ;;      Totals:         0       9       0       0       0
  1521 ;;Total ram usage:        9 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 2
  1524 ;; This function calls:
  1525 ;;		___awdiv
  1526 ;;		___awmod
  1527 ;; This function is called by:
  1528 ;;		_outputValues
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532     0024                     _separar_digitos8:	
  1533                           ;psect for function _separar_digitos8
  1534                           
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1538                           ;separar_digitos8@num stored from wreg
  1539     0024  1283               	bcf	3,5	;RP0=0, select bank0
  1540     0025  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0026  00B4               	movwf	separar_digitos8@num
  1542     0027                     l1306:
  1543     0027  300A               	movlw	10
  1544     0028  00F2               	movwf	___awdiv@divisor
  1545     0029  3000               	movlw	0
  1546     002A  00F3               	movwf	___awdiv@divisor+1
  1547     002B  0834               	movf	separar_digitos8@num,w
  1548     002C  00AE               	movwf	??_separar_digitos8
  1549     002D  01AF               	clrf	??_separar_digitos8+1
  1550     002E  082E               	movf	??_separar_digitos8,w
  1551     002F  00F4               	movwf	___awdiv@dividend
  1552     0030  082F               	movf	??_separar_digitos8+1,w
  1553     0031  00F5               	movwf	___awdiv@dividend+1
  1554     0032  120A  118A  210A  120A  118A  	fcall	___awdiv
  1555     0037  0872               	movf	?___awdiv,w
  1556     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1557     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1558     003A  00B5               	movwf	separar_digitos8@div1
  1559     003B  300A               	movlw	10
  1560     003C  00F2               	movwf	___awmod@divisor
  1561     003D  3000               	movlw	0
  1562     003E  00F3               	movwf	___awmod@divisor+1
  1563     003F  0834               	movf	separar_digitos8@num,w
  1564     0040  00AE               	movwf	??_separar_digitos8
  1565     0041  01AF               	clrf	??_separar_digitos8+1
  1566     0042  082E               	movf	??_separar_digitos8,w
  1567     0043  00F4               	movwf	___awmod@dividend
  1568     0044  082F               	movf	??_separar_digitos8+1,w
  1569     0045  00F5               	movwf	___awmod@dividend+1
  1570     0046  120A  118A  21CE  120A  118A  	fcall	___awmod
  1571     004B  0872               	movf	?___awmod,w
  1572     004C  1283               	bcf	3,5	;RP0=0, select bank0
  1573     004D  1303               	bcf	3,6	;RP1=0, select bank0
  1574     004E  00B3               	movwf	separar_digitos8@unidades
  1575     004F  300A               	movlw	10
  1576     0050  00F2               	movwf	___awdiv@divisor
  1577     0051  3000               	movlw	0
  1578     0052  00F3               	movwf	___awdiv@divisor+1
  1579     0053  0835               	movf	separar_digitos8@div1,w
  1580     0054  00AE               	movwf	??_separar_digitos8
  1581     0055  01AF               	clrf	??_separar_digitos8+1
  1582     0056  082E               	movf	??_separar_digitos8,w
  1583     0057  00F4               	movwf	___awdiv@dividend
  1584     0058  082F               	movf	??_separar_digitos8+1,w
  1585     0059  00F5               	movwf	___awdiv@dividend+1
  1586     005A  120A  118A  210A  120A  118A  	fcall	___awdiv
  1587     005F  0872               	movf	?___awdiv,w
  1588     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1589     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1590     0062  00B0               	movwf	separar_digitos8@div2
  1591     0063  300A               	movlw	10
  1592     0064  00F2               	movwf	___awmod@divisor
  1593     0065  3000               	movlw	0
  1594     0066  00F3               	movwf	___awmod@divisor+1
  1595     0067  0835               	movf	separar_digitos8@div1,w
  1596     0068  00AE               	movwf	??_separar_digitos8
  1597     0069  01AF               	clrf	??_separar_digitos8+1
  1598     006A  082E               	movf	??_separar_digitos8,w
  1599     006B  00F4               	movwf	___awmod@dividend
  1600     006C  082F               	movf	??_separar_digitos8+1,w
  1601     006D  00F5               	movwf	___awmod@dividend+1
  1602     006E  120A  118A  21CE  120A  118A  	fcall	___awmod
  1603     0073  0872               	movf	?___awmod,w
  1604     0074  1283               	bcf	3,5	;RP0=0, select bank0
  1605     0075  1303               	bcf	3,6	;RP1=0, select bank0
  1606     0076  00B2               	movwf	separar_digitos8@decenas
  1607     0077  300A               	movlw	10
  1608     0078  00F2               	movwf	___awmod@divisor
  1609     0079  3000               	movlw	0
  1610     007A  00F3               	movwf	___awmod@divisor+1
  1611     007B  0830               	movf	separar_digitos8@div2,w
  1612     007C  00AE               	movwf	??_separar_digitos8
  1613     007D  01AF               	clrf	??_separar_digitos8+1
  1614     007E  082E               	movf	??_separar_digitos8,w
  1615     007F  00F4               	movwf	___awmod@dividend
  1616     0080  082F               	movf	??_separar_digitos8+1,w
  1617     0081  00F5               	movwf	___awmod@dividend+1
  1618     0082  120A  118A  21CE  120A  118A  	fcall	___awmod
  1619     0087  0872               	movf	?___awmod,w
  1620     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1622     008A  00B1               	movwf	separar_digitos8@centenas
  1623     008B                     l1308:
  1624     008B  082D               	movf	separar_digitos8@dig8,w
  1625     008C  3E02               	addlw	2
  1626     008D  0084               	movwf	4
  1627     008E  0833               	movf	separar_digitos8@unidades,w
  1628     008F  3E30               	addlw	48
  1629     0090  1383               	bcf	3,7	;select IRP bank0
  1630     0091  0080               	movwf	0
  1631     0092                     l1310:
  1632     0092  0A2D               	incf	separar_digitos8@dig8,w
  1633     0093  0084               	movwf	4
  1634     0094  0832               	movf	separar_digitos8@decenas,w
  1635     0095  3E30               	addlw	48
  1636     0096  0080               	movwf	0
  1637     0097                     l1312:
  1638     0097  082D               	movf	separar_digitos8@dig8,w
  1639     0098  0084               	movwf	4
  1640     0099  0831               	movf	separar_digitos8@centenas,w
  1641     009A  3E30               	addlw	48
  1642     009B  0080               	movwf	0
  1643     009C                     l111:
  1644     009C  0008               	return
  1645     009D                     __end_of_separar_digitos8:
  1646                           
  1647                           	psect	text10
  1648     01CE                     __ptext10:	
  1649 ;; *************** function ___awmod *****************
  1650 ;; Defined at:
  1651 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  divisor         2    2[COMMON] int 
  1654 ;;  dividend        2    4[COMMON] int 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  sign            1    7[COMMON] unsigned char 
  1657 ;;  counter         1    6[COMMON] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2    2[COMMON] int 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, btemp+1
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1667 ;;      Params:         4       0       0       0       0
  1668 ;;      Locals:         2       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0
  1670 ;;      Totals:         6       0       0       0       0
  1671 ;;Total ram usage:        6 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_separar_digitos8
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681     01CE                     ___awmod:	
  1682                           ;psect for function ___awmod
  1683                           
  1684     01CE                     l1096:	
  1685                           ;incstack = 0
  1686                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1687                           
  1688     01CE  01F7               	clrf	___awmod@sign
  1689     01CF                     l1098:
  1690     01CF  1FF5               	btfss	___awmod@dividend+1,7
  1691     01D0  29D2               	goto	u501
  1692     01D1  29D3               	goto	u500
  1693     01D2                     u501:
  1694     01D2  29DA               	goto	l1104
  1695     01D3                     u500:
  1696     01D3                     l1100:
  1697     01D3  09F4               	comf	___awmod@dividend,f
  1698     01D4  09F5               	comf	___awmod@dividend+1,f
  1699     01D5  0AF4               	incf	___awmod@dividend,f
  1700     01D6  1903               	skipnz
  1701     01D7  0AF5               	incf	___awmod@dividend+1,f
  1702     01D8                     l1102:
  1703     01D8  01F7               	clrf	___awmod@sign
  1704     01D9  0AF7               	incf	___awmod@sign,f
  1705     01DA                     l1104:
  1706     01DA  1FF3               	btfss	___awmod@divisor+1,7
  1707     01DB  29DD               	goto	u511
  1708     01DC  29DE               	goto	u510
  1709     01DD                     u511:
  1710     01DD  29E3               	goto	l1108
  1711     01DE                     u510:
  1712     01DE                     l1106:
  1713     01DE  09F2               	comf	___awmod@divisor,f
  1714     01DF  09F3               	comf	___awmod@divisor+1,f
  1715     01E0  0AF2               	incf	___awmod@divisor,f
  1716     01E1  1903               	skipnz
  1717     01E2  0AF3               	incf	___awmod@divisor+1,f
  1718     01E3                     l1108:
  1719     01E3  0872               	movf	___awmod@divisor,w
  1720     01E4  0473               	iorwf	___awmod@divisor+1,w
  1721     01E5  1903               	btfsc	3,2
  1722     01E6  29E8               	goto	u521
  1723     01E7  29E9               	goto	u520
  1724     01E8                     u521:
  1725     01E8  2A18               	goto	l1126
  1726     01E9                     u520:
  1727     01E9                     l1110:
  1728     01E9  01F6               	clrf	___awmod@counter
  1729     01EA  0AF6               	incf	___awmod@counter,f
  1730     01EB  29F7               	goto	l1116
  1731     01EC                     l1112:
  1732     01EC  3001               	movlw	1
  1733     01ED                     u535:
  1734     01ED  1003               	clrc
  1735     01EE  0DF2               	rlf	___awmod@divisor,f
  1736     01EF  0DF3               	rlf	___awmod@divisor+1,f
  1737     01F0  3EFF               	addlw	-1
  1738     01F1  1D03               	skipz
  1739     01F2  29ED               	goto	u535
  1740     01F3                     l1114:
  1741     01F3  3001               	movlw	1
  1742     01F4  00FF               	movwf	btemp+1
  1743     01F5  087F               	movf	btemp+1,w
  1744     01F6  07F6               	addwf	___awmod@counter,f
  1745     01F7                     l1116:
  1746     01F7  1FF3               	btfss	___awmod@divisor+1,7
  1747     01F8  29FA               	goto	u541
  1748     01F9  29FB               	goto	u540
  1749     01FA                     u541:
  1750     01FA  29EC               	goto	l1112
  1751     01FB                     u540:
  1752     01FB                     l1118:
  1753     01FB  0873               	movf	___awmod@divisor+1,w
  1754     01FC  0275               	subwf	___awmod@dividend+1,w
  1755     01FD  1D03               	skipz
  1756     01FE  2A01               	goto	u555
  1757     01FF  0872               	movf	___awmod@divisor,w
  1758     0200  0274               	subwf	___awmod@dividend,w
  1759     0201                     u555:
  1760     0201  1C03               	skipc
  1761     0202  2A04               	goto	u551
  1762     0203  2A05               	goto	u550
  1763     0204                     u551:
  1764     0204  2A0B               	goto	l1122
  1765     0205                     u550:
  1766     0205                     l1120:
  1767     0205  0872               	movf	___awmod@divisor,w
  1768     0206  02F4               	subwf	___awmod@dividend,f
  1769     0207  0873               	movf	___awmod@divisor+1,w
  1770     0208  1C03               	skipc
  1771     0209  03F5               	decf	___awmod@dividend+1,f
  1772     020A  02F5               	subwf	___awmod@dividend+1,f
  1773     020B                     l1122:
  1774     020B  3001               	movlw	1
  1775     020C                     u565:
  1776     020C  1003               	clrc
  1777     020D  0CF3               	rrf	___awmod@divisor+1,f
  1778     020E  0CF2               	rrf	___awmod@divisor,f
  1779     020F  3EFF               	addlw	-1
  1780     0210  1D03               	skipz
  1781     0211  2A0C               	goto	u565
  1782     0212                     l1124:
  1783     0212  3001               	movlw	1
  1784     0213  02F6               	subwf	___awmod@counter,f
  1785     0214  1D03               	btfss	3,2
  1786     0215  2A17               	goto	u571
  1787     0216  2A18               	goto	u570
  1788     0217                     u571:
  1789     0217  29FB               	goto	l1118
  1790     0218                     u570:
  1791     0218                     l1126:
  1792     0218  0877               	movf	___awmod@sign,w
  1793     0219  1903               	btfsc	3,2
  1794     021A  2A1C               	goto	u581
  1795     021B  2A1D               	goto	u580
  1796     021C                     u581:
  1797     021C  2A22               	goto	l1130
  1798     021D                     u580:
  1799     021D                     l1128:
  1800     021D  09F4               	comf	___awmod@dividend,f
  1801     021E  09F5               	comf	___awmod@dividend+1,f
  1802     021F  0AF4               	incf	___awmod@dividend,f
  1803     0220  1903               	skipnz
  1804     0221  0AF5               	incf	___awmod@dividend+1,f
  1805     0222                     l1130:
  1806     0222  0875               	movf	___awmod@dividend+1,w
  1807     0223  00F3               	movwf	?___awmod+1
  1808     0224  0874               	movf	___awmod@dividend,w
  1809     0225  00F2               	movwf	?___awmod
  1810     0226                     l418:
  1811     0226  0008               	return
  1812     0227                     __end_of___awmod:
  1813                           
  1814                           	psect	text11
  1815     010A                     __ptext11:	
  1816 ;; *************** function ___awdiv *****************
  1817 ;; Defined at:
  1818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  divisor         2    2[COMMON] int 
  1821 ;;  dividend        2    4[COMMON] int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  quotient        2    8[COMMON] int 
  1824 ;;  sign            1    7[COMMON] unsigned char 
  1825 ;;  counter         1    6[COMMON] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  2    2[COMMON] int 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, btemp+1
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         4       0       0       0       0
  1836 ;;      Locals:         4       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0
  1838 ;;      Totals:         8       0       0       0       0
  1839 ;;Total ram usage:        8 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; Hardware stack levels required when called: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_separar_digitos8
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849     010A                     ___awdiv:	
  1850                           ;psect for function ___awdiv
  1851                           
  1852     010A                     l1052:	
  1853                           ;incstack = 0
  1854                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1855                           
  1856     010A  01F7               	clrf	___awdiv@sign
  1857     010B                     l1054:
  1858     010B  1FF3               	btfss	___awdiv@divisor+1,7
  1859     010C  290E               	goto	u401
  1860     010D  290F               	goto	u400
  1861     010E                     u401:
  1862     010E  2916               	goto	l1060
  1863     010F                     u400:
  1864     010F                     l1056:
  1865     010F  09F2               	comf	___awdiv@divisor,f
  1866     0110  09F3               	comf	___awdiv@divisor+1,f
  1867     0111  0AF2               	incf	___awdiv@divisor,f
  1868     0112  1903               	skipnz
  1869     0113  0AF3               	incf	___awdiv@divisor+1,f
  1870     0114                     l1058:
  1871     0114  01F7               	clrf	___awdiv@sign
  1872     0115  0AF7               	incf	___awdiv@sign,f
  1873     0116                     l1060:
  1874     0116  1FF5               	btfss	___awdiv@dividend+1,7
  1875     0117  2919               	goto	u411
  1876     0118  291A               	goto	u410
  1877     0119                     u411:
  1878     0119  2923               	goto	l1066
  1879     011A                     u410:
  1880     011A                     l1062:
  1881     011A  09F4               	comf	___awdiv@dividend,f
  1882     011B  09F5               	comf	___awdiv@dividend+1,f
  1883     011C  0AF4               	incf	___awdiv@dividend,f
  1884     011D  1903               	skipnz
  1885     011E  0AF5               	incf	___awdiv@dividend+1,f
  1886     011F                     l1064:
  1887     011F  3001               	movlw	1
  1888     0120  00FF               	movwf	btemp+1
  1889     0121  087F               	movf	btemp+1,w
  1890     0122  06F7               	xorwf	___awdiv@sign,f
  1891     0123                     l1066:
  1892     0123  01F8               	clrf	___awdiv@quotient
  1893     0124  01F9               	clrf	___awdiv@quotient+1
  1894     0125                     l1068:
  1895     0125  0872               	movf	___awdiv@divisor,w
  1896     0126  0473               	iorwf	___awdiv@divisor+1,w
  1897     0127  1903               	btfsc	3,2
  1898     0128  292A               	goto	u421
  1899     0129  292B               	goto	u420
  1900     012A                     u421:
  1901     012A  2962               	goto	l1088
  1902     012B                     u420:
  1903     012B                     l1070:
  1904     012B  01F6               	clrf	___awdiv@counter
  1905     012C  0AF6               	incf	___awdiv@counter,f
  1906     012D  2939               	goto	l1076
  1907     012E                     l1072:
  1908     012E  3001               	movlw	1
  1909     012F                     u435:
  1910     012F  1003               	clrc
  1911     0130  0DF2               	rlf	___awdiv@divisor,f
  1912     0131  0DF3               	rlf	___awdiv@divisor+1,f
  1913     0132  3EFF               	addlw	-1
  1914     0133  1D03               	skipz
  1915     0134  292F               	goto	u435
  1916     0135                     l1074:
  1917     0135  3001               	movlw	1
  1918     0136  00FF               	movwf	btemp+1
  1919     0137  087F               	movf	btemp+1,w
  1920     0138  07F6               	addwf	___awdiv@counter,f
  1921     0139                     l1076:
  1922     0139  1FF3               	btfss	___awdiv@divisor+1,7
  1923     013A  293C               	goto	u441
  1924     013B  293D               	goto	u440
  1925     013C                     u441:
  1926     013C  292E               	goto	l1072
  1927     013D                     u440:
  1928     013D                     l1078:
  1929     013D  3001               	movlw	1
  1930     013E                     u455:
  1931     013E  1003               	clrc
  1932     013F  0DF8               	rlf	___awdiv@quotient,f
  1933     0140  0DF9               	rlf	___awdiv@quotient+1,f
  1934     0141  3EFF               	addlw	-1
  1935     0142  1D03               	skipz
  1936     0143  293E               	goto	u455
  1937     0144  0873               	movf	___awdiv@divisor+1,w
  1938     0145  0275               	subwf	___awdiv@dividend+1,w
  1939     0146  1D03               	skipz
  1940     0147  294A               	goto	u465
  1941     0148  0872               	movf	___awdiv@divisor,w
  1942     0149  0274               	subwf	___awdiv@dividend,w
  1943     014A                     u465:
  1944     014A  1C03               	skipc
  1945     014B  294D               	goto	u461
  1946     014C  294E               	goto	u460
  1947     014D                     u461:
  1948     014D  2955               	goto	l1084
  1949     014E                     u460:
  1950     014E                     l1080:
  1951     014E  0872               	movf	___awdiv@divisor,w
  1952     014F  02F4               	subwf	___awdiv@dividend,f
  1953     0150  0873               	movf	___awdiv@divisor+1,w
  1954     0151  1C03               	skipc
  1955     0152  03F5               	decf	___awdiv@dividend+1,f
  1956     0153  02F5               	subwf	___awdiv@dividend+1,f
  1957     0154                     l1082:
  1958     0154  1478               	bsf	___awdiv@quotient,0
  1959     0155                     l1084:
  1960     0155  3001               	movlw	1
  1961     0156                     u475:
  1962     0156  1003               	clrc
  1963     0157  0CF3               	rrf	___awdiv@divisor+1,f
  1964     0158  0CF2               	rrf	___awdiv@divisor,f
  1965     0159  3EFF               	addlw	-1
  1966     015A  1D03               	skipz
  1967     015B  2956               	goto	u475
  1968     015C                     l1086:
  1969     015C  3001               	movlw	1
  1970     015D  02F6               	subwf	___awdiv@counter,f
  1971     015E  1D03               	btfss	3,2
  1972     015F  2961               	goto	u481
  1973     0160  2962               	goto	u480
  1974     0161                     u481:
  1975     0161  293D               	goto	l1078
  1976     0162                     u480:
  1977     0162                     l1088:
  1978     0162  0877               	movf	___awdiv@sign,w
  1979     0163  1903               	btfsc	3,2
  1980     0164  2966               	goto	u491
  1981     0165  2967               	goto	u490
  1982     0166                     u491:
  1983     0166  296C               	goto	l1092
  1984     0167                     u490:
  1985     0167                     l1090:
  1986     0167  09F8               	comf	___awdiv@quotient,f
  1987     0168  09F9               	comf	___awdiv@quotient+1,f
  1988     0169  0AF8               	incf	___awdiv@quotient,f
  1989     016A  1903               	skipnz
  1990     016B  0AF9               	incf	___awdiv@quotient+1,f
  1991     016C                     l1092:
  1992     016C  0879               	movf	___awdiv@quotient+1,w
  1993     016D  00F3               	movwf	?___awdiv+1
  1994     016E  0878               	movf	___awdiv@quotient,w
  1995     016F  00F2               	movwf	?___awdiv
  1996     0170                     l405:
  1997     0170  0008               	return
  1998     0171                     __end_of___awdiv:
  1999                           
  2000                           	psect	text12
  2001     02BD                     __ptext12:	
  2002 ;; *************** function _Lcd_Write_String *****************
  2003 ;; Defined at:
  2004 ;;		line 98 in file "LCD.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  a               2    7[COMMON] PTR unsigned char 
  2007 ;;		 -> STR_3(4), STR_2(5), STR_1(5), count_s(4), 
  2008 ;;		 -> pot1_s(4), pot0_s(4), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  i               2    3[BANK0 ] int 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         2       0       0       0       0
  2021 ;;      Locals:         0       2       0       0       0
  2022 ;;      Temps:          0       3       0       0       0
  2023 ;;      Totals:         2       5       0       0       0
  2024 ;;Total ram usage:        7 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 3
  2027 ;; This function calls:
  2028 ;;		_Lcd_Write_Char
  2029 ;; This function is called by:
  2030 ;;		_outputValues
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034     02BD                     _Lcd_Write_String:	
  2035                           ;psect for function _Lcd_Write_String
  2036                           
  2037     02BD                     l1334:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2040                           
  2041                           
  2042                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2043     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2044     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2045     02BF  01B0               	clrf	Lcd_Write_String@i
  2046     02C0  01B1               	clrf	Lcd_Write_String@i+1
  2047     02C1  2AE6               	goto	l1340
  2048     02C2                     l1336:
  2049                           
  2050                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2051     02C2  0830               	movf	Lcd_Write_String@i,w
  2052     02C3  0777               	addwf	Lcd_Write_String@a,w
  2053     02C4  00AE               	movwf	??_Lcd_Write_String+1
  2054     02C5  0878               	movf	Lcd_Write_String@a+1,w
  2055     02C6  00AD               	movwf	??_Lcd_Write_String
  2056     02C7  1803               	skipnc
  2057     02C8  0AAD               	incf	??_Lcd_Write_String,f
  2058     02C9  1FB0               	btfss	Lcd_Write_String@i,7
  2059     02CA  2ACC               	goto	u760
  2060     02CB  03AD               	decf	??_Lcd_Write_String,f
  2061     02CC                     u760:
  2062     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2063     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2064     02CE  082D               	movf	??_Lcd_Write_String,w
  2065     02CF  00AF               	movwf	??_Lcd_Write_String+2
  2066     02D0  082F               	movf	??_Lcd_Write_String+2,w
  2067     02D1  00FF               	movwf	btemp+1
  2068     02D2  082E               	movf	??_Lcd_Write_String+1,w
  2069     02D3  0084               	movwf	4
  2070     02D4  120A  118A  237C  120A  118A  	fcall	stringtab
  2071     02D9  120A  118A  2303  120A  118A  	fcall	_Lcd_Write_Char
  2072     02DE                     l1338:
  2073     02DE  3001               	movlw	1
  2074     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2075     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2076     02E1  07B0               	addwf	Lcd_Write_String@i,f
  2077     02E2  1803               	skipnc
  2078     02E3  0AB1               	incf	Lcd_Write_String@i+1,f
  2079     02E4  3000               	movlw	0
  2080     02E5  07B1               	addwf	Lcd_Write_String@i+1,f
  2081     02E6                     l1340:
  2082     02E6  0830               	movf	Lcd_Write_String@i,w
  2083     02E7  0777               	addwf	Lcd_Write_String@a,w
  2084     02E8  00AE               	movwf	??_Lcd_Write_String+1
  2085     02E9  0878               	movf	Lcd_Write_String@a+1,w
  2086     02EA  00AD               	movwf	??_Lcd_Write_String
  2087     02EB  1803               	skipnc
  2088     02EC  0AAD               	incf	??_Lcd_Write_String,f
  2089     02ED  1FB0               	btfss	Lcd_Write_String@i,7
  2090     02EE  2AF0               	goto	u770
  2091     02EF  03AD               	decf	??_Lcd_Write_String,f
  2092     02F0                     u770:
  2093     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2094     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2095     02F2  082D               	movf	??_Lcd_Write_String,w
  2096     02F3  00AF               	movwf	??_Lcd_Write_String+2
  2097     02F4  082F               	movf	??_Lcd_Write_String+2,w
  2098     02F5  00FF               	movwf	btemp+1
  2099     02F6  082E               	movf	??_Lcd_Write_String+1,w
  2100     02F7  0084               	movwf	4
  2101     02F8  120A  118A  237C  120A  118A  	fcall	stringtab
  2102     02FD  3A00               	xorlw	0
  2103     02FE  1D03               	skipz
  2104     02FF  2B01               	goto	u781
  2105     0300  2B02               	goto	u780
  2106     0301                     u781:
  2107     0301  2AC2               	goto	l1336
  2108     0302                     u780:
  2109     0302                     l160:
  2110     0302  0008               	return
  2111     0303                     __end_of_Lcd_Write_String:
  2112                           
  2113                           	psect	text13
  2114     0303                     __ptext13:	
  2115 ;; *************** function _Lcd_Write_Char *****************
  2116 ;; Defined at:
  2117 ;;		line 83 in file "LCD.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  a               1    wreg     unsigned char 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  a               1    6[COMMON] unsigned char 
  2122 ;;  y               1    5[COMMON] unsigned char 
  2123 ;;  temp            1    4[COMMON] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         3       0       0       0       0
  2135 ;;      Temps:          1       0       0       0       0
  2136 ;;      Totals:         4       0       0       0       0
  2137 ;;Total ram usage:        4 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 2
  2140 ;; This function calls:
  2141 ;;		_Lcd_Port
  2142 ;; This function is called by:
  2143 ;;		_Lcd_Write_String
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     0303                     _Lcd_Write_Char:	
  2148                           ;psect for function _Lcd_Write_Char
  2149                           
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2153                           ;Lcd_Write_Char@a stored from wreg
  2154     0303  00F6               	movwf	Lcd_Write_Char@a
  2155     0304                     l1276:
  2156                           
  2157                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2158     0304  0876               	movf	Lcd_Write_Char@a,w
  2159     0305  390F               	andlw	15
  2160     0306  00F4               	movwf	Lcd_Write_Char@temp
  2161                           
  2162                           ;LCD.c: 86:     y = a & 0xF0;
  2163     0307  0876               	movf	Lcd_Write_Char@a,w
  2164     0308  39F0               	andlw	240
  2165     0309  00F5               	movwf	Lcd_Write_Char@y
  2166     030A                     l1278:
  2167                           
  2168                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2169     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2170     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2171     030C  1508               	bsf	8,2	;volatile
  2172     030D                     l1280:
  2173                           
  2174                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2175     030D  0875               	movf	Lcd_Write_Char@y,w
  2176     030E  00F3               	movwf	??_Lcd_Write_Char
  2177     030F  3004               	movlw	4
  2178     0310                     u715:
  2179     0310  1003               	clrc
  2180     0311  0CF3               	rrf	??_Lcd_Write_Char,f
  2181     0312  3EFF               	addlw	-1
  2182     0313  1D03               	skipz
  2183     0314  2B10               	goto	u715
  2184     0315  0873               	movf	??_Lcd_Write_Char,w
  2185     0316  120A  118A  235A  120A  118A  	fcall	_Lcd_Port
  2186     031B                     l1282:
  2187                           
  2188                           ;LCD.c: 89:     RD3 = 1;
  2189     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2190     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2191     031D  1588               	bsf	8,3	;volatile
  2192     031E                     l1284:
  2193                           
  2194                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2195     031E  301A               	movlw	26
  2196     031F  00F3               	movwf	??_Lcd_Write_Char
  2197     0320                     u857:
  2198     0320  0BF3               	decfsz	??_Lcd_Write_Char,f
  2199     0321  2B20               	goto	u857
  2200     0322  0000               	nop
  2201     0323                     l1286:
  2202                           
  2203                           ;LCD.c: 91:     RD3 = 0;
  2204     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2205     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2206     0325  1188               	bcf	8,3	;volatile
  2207     0326                     l1288:
  2208                           
  2209                           ;LCD.c: 92:     Lcd_Port(temp);
  2210     0326  0874               	movf	Lcd_Write_Char@temp,w
  2211     0327  120A  118A  235A  120A  118A  	fcall	_Lcd_Port
  2212     032C                     l1290:
  2213                           
  2214                           ;LCD.c: 93:     RD3 = 1;
  2215     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2216     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2217     032E  1588               	bsf	8,3	;volatile
  2218     032F                     l1292:
  2219                           
  2220                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2221     032F  301A               	movlw	26
  2222     0330  00F3               	movwf	??_Lcd_Write_Char
  2223     0331                     u867:
  2224     0331  0BF3               	decfsz	??_Lcd_Write_Char,f
  2225     0332  2B31               	goto	u867
  2226     0333  0000               	nop
  2227     0334                     l1294:
  2228                           
  2229                           ;LCD.c: 95:     RD3 = 0;
  2230     0334  1283               	bcf	3,5	;RP0=0, select bank0
  2231     0335  1303               	bcf	3,6	;RP1=0, select bank0
  2232     0336  1188               	bcf	8,3	;volatile
  2233     0337                     l154:
  2234     0337  0008               	return
  2235     0338                     __end_of_Lcd_Write_Char:
  2236                           
  2237                           	psect	text14
  2238     0227                     __ptext14:	
  2239 ;; *************** function _Lcd_Set_Cursor *****************
  2240 ;; Defined at:
  2241 ;;		line 48 in file "LCD.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  a               1    wreg     unsigned char 
  2244 ;;  b               1    6[COMMON] unsigned char 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;  a               1    0[BANK0 ] unsigned char 
  2247 ;;  temp            1    3[BANK0 ] unsigned char 
  2248 ;;  y               1    2[BANK0 ] unsigned char 
  2249 ;;  z               1    1[BANK0 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         1       0       0       0       0
  2260 ;;      Locals:         0       4       0       0       0
  2261 ;;      Temps:          1       0       0       0       0
  2262 ;;      Totals:         2       4       0       0       0
  2263 ;;Total ram usage:        6 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 3
  2266 ;; This function calls:
  2267 ;;		_Lcd_Cmd
  2268 ;; This function is called by:
  2269 ;;		_outputValues
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     0227                     _Lcd_Set_Cursor:	
  2274                           ;psect for function _Lcd_Set_Cursor
  2275                           
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2279                           ;Lcd_Set_Cursor@a stored from wreg
  2280     0227  1283               	bcf	3,5	;RP0=0, select bank0
  2281     0228  1303               	bcf	3,6	;RP1=0, select bank0
  2282     0229  00AD               	movwf	Lcd_Set_Cursor@a
  2283     022A                     l1314:
  2284                           
  2285                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2286     022A  032D               	decf	Lcd_Set_Cursor@a,w
  2287     022B  1D03               	btfss	3,2
  2288     022C  2A2E               	goto	u721
  2289     022D  2A2F               	goto	u720
  2290     022E                     u721:
  2291     022E  2A4E               	goto	l1324
  2292     022F                     u720:
  2293     022F                     l1316:
  2294                           
  2295                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2296     022F  0876               	movf	Lcd_Set_Cursor@b,w
  2297     0230  3E7F               	addlw	127
  2298     0231  00B0               	movwf	Lcd_Set_Cursor@temp
  2299                           
  2300                           ;LCD.c: 52:         z = temp >> 4;
  2301     0232  0830               	movf	Lcd_Set_Cursor@temp,w
  2302     0233  00F7               	movwf	??_Lcd_Set_Cursor
  2303     0234  3004               	movlw	4
  2304     0235                     u735:
  2305     0235  1003               	clrc
  2306     0236  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2307     0237  3EFF               	addlw	-1
  2308     0238  1D03               	skipz
  2309     0239  2A35               	goto	u735
  2310     023A  0877               	movf	??_Lcd_Set_Cursor,w
  2311     023B  00AE               	movwf	Lcd_Set_Cursor@z
  2312     023C                     l1318:
  2313                           
  2314                           ;LCD.c: 53:         y = temp & 0x0F;
  2315     023C  0830               	movf	Lcd_Set_Cursor@temp,w
  2316     023D  390F               	andlw	15
  2317     023E  00AF               	movwf	Lcd_Set_Cursor@y
  2318     023F                     l1320:
  2319                           
  2320                           ;LCD.c: 54:         Lcd_Cmd(z);
  2321     023F  082E               	movf	Lcd_Set_Cursor@z,w
  2322     0240  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  2323     0245                     l1322:
  2324                           
  2325                           ;LCD.c: 55:         Lcd_Cmd(y);
  2326     0245  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0246  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0247  082F               	movf	Lcd_Set_Cursor@y,w
  2329     0248  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  2330                           
  2331                           ;LCD.c: 56:     } else if (a == 2) {
  2332     024D  2A72               	goto	l148
  2333     024E                     l1324:
  2334     024E  3002               	movlw	2
  2335     024F  062D               	xorwf	Lcd_Set_Cursor@a,w
  2336     0250  1D03               	btfss	3,2
  2337     0251  2A53               	goto	u741
  2338     0252  2A54               	goto	u740
  2339     0253                     u741:
  2340     0253  2A72               	goto	l148
  2341     0254                     u740:
  2342     0254                     l1326:
  2343                           
  2344                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2345     0254  0876               	movf	Lcd_Set_Cursor@b,w
  2346     0255  3EBF               	addlw	191
  2347     0256  00B0               	movwf	Lcd_Set_Cursor@temp
  2348                           
  2349                           ;LCD.c: 58:         z = temp >> 4;
  2350     0257  0830               	movf	Lcd_Set_Cursor@temp,w
  2351     0258  00F7               	movwf	??_Lcd_Set_Cursor
  2352     0259  3004               	movlw	4
  2353     025A                     u755:
  2354     025A  1003               	clrc
  2355     025B  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2356     025C  3EFF               	addlw	-1
  2357     025D  1D03               	skipz
  2358     025E  2A5A               	goto	u755
  2359     025F  0877               	movf	??_Lcd_Set_Cursor,w
  2360     0260  00AE               	movwf	Lcd_Set_Cursor@z
  2361     0261                     l1328:
  2362                           
  2363                           ;LCD.c: 59:         y = temp & 0x0F;
  2364     0261  0830               	movf	Lcd_Set_Cursor@temp,w
  2365     0262  390F               	andlw	15
  2366     0263  00AF               	movwf	Lcd_Set_Cursor@y
  2367     0264                     l1330:
  2368                           
  2369                           ;LCD.c: 60:         Lcd_Cmd(z);
  2370     0264  082E               	movf	Lcd_Set_Cursor@z,w
  2371     0265  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  2372     026A                     l1332:
  2373                           
  2374                           ;LCD.c: 61:         Lcd_Cmd(y);
  2375     026A  1283               	bcf	3,5	;RP0=0, select bank0
  2376     026B  1303               	bcf	3,6	;RP1=0, select bank0
  2377     026C  082F               	movf	Lcd_Set_Cursor@y,w
  2378     026D  120A  118A  239A  120A  118A  	fcall	_Lcd_Cmd
  2379     0272                     l148:
  2380     0272  0008               	return
  2381     0273                     __end_of_Lcd_Set_Cursor:
  2382                           
  2383                           	psect	text15
  2384     039A                     __ptext15:	
  2385 ;; *************** function _Lcd_Cmd *****************
  2386 ;; Defined at:
  2387 ;;		line 35 in file "LCD.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  a               1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  a               1    5[COMMON] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         1       0       0       0       0
  2403 ;;      Temps:          2       0       0       0       0
  2404 ;;      Totals:         3       0       0       0       0
  2405 ;;Total ram usage:        3 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 2
  2408 ;; This function calls:
  2409 ;;		_Lcd_Port
  2410 ;; This function is called by:
  2411 ;;		_Lcd_Set_Cursor
  2412 ;;		_Lcd_Init
  2413 ;;		_Lcd_Clear
  2414 ;;		_Lcd_Shift_Right
  2415 ;;		_Lcd_Shift_Left
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419     039A                     _Lcd_Cmd:	
  2420                           ;psect for function _Lcd_Cmd
  2421                           
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2425                           ;Lcd_Cmd@a stored from wreg
  2426     039A  00F5               	movwf	Lcd_Cmd@a
  2427     039B                     l1266:
  2428                           
  2429                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2430     039B  1283               	bcf	3,5	;RP0=0, select bank0
  2431     039C  1303               	bcf	3,6	;RP1=0, select bank0
  2432     039D  1108               	bcf	8,2	;volatile
  2433     039E                     l1268:
  2434                           
  2435                           ;LCD.c: 37:     Lcd_Port(a);
  2436     039E  0875               	movf	Lcd_Cmd@a,w
  2437     039F  120A  118A  235A  120A  118A  	fcall	_Lcd_Port
  2438     03A4                     l1270:
  2439                           
  2440                           ;LCD.c: 38:     RD3 = 1;
  2441     03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2442     03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2443     03A6  1588               	bsf	8,3	;volatile
  2444     03A7                     l1272:
  2445                           
  2446                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2447     03A7  300B               	movlw	11
  2448     03A8  00F4               	movwf	??_Lcd_Cmd+1
  2449     03A9  3062               	movlw	98
  2450     03AA  00F3               	movwf	??_Lcd_Cmd
  2451     03AB                     u877:
  2452     03AB  0BF3               	decfsz	??_Lcd_Cmd,f
  2453     03AC  2BAB               	goto	u877
  2454     03AD  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2455     03AE  2BAB               	goto	u877
  2456     03AF  0000               	nop
  2457     03B0                     l1274:
  2458                           
  2459                           ;LCD.c: 40:     RD3 = 0;
  2460     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2461     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2462     03B2  1188               	bcf	8,3	;volatile
  2463     03B3                     l139:
  2464     03B3  0008               	return
  2465     03B4                     __end_of_Lcd_Cmd:
  2466                           
  2467                           	psect	text16
  2468     035A                     __ptext16:	
  2469 ;; *************** function _Lcd_Port *****************
  2470 ;; Defined at:
  2471 ;;		line 13 in file "LCD.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  a               1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  a               1    2[COMMON] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         1       0       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_Lcd_Cmd
  2496 ;;		_Lcd_Init
  2497 ;;		_Lcd_Write_Char
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501     035A                     _Lcd_Port:	
  2502                           ;psect for function _Lcd_Port
  2503                           
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in _Lcd_Port: [wreg]
  2507                           ;Lcd_Port@a stored from wreg
  2508     035A  00F2               	movwf	Lcd_Port@a
  2509     035B                     l1256:
  2510                           
  2511                           ;LCD.c: 14:     if (a & 1)
  2512     035B  1C72               	btfss	Lcd_Port@a,0
  2513     035C  2B5E               	goto	u671
  2514     035D  2B5F               	goto	u670
  2515     035E                     u671:
  2516     035E  2B63               	goto	l128
  2517     035F                     u670:
  2518     035F                     l1258:
  2519                           
  2520                           ;LCD.c: 15:         RD4 = 1;
  2521     035F  1283               	bcf	3,5	;RP0=0, select bank0
  2522     0360  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0361  1608               	bsf	8,4	;volatile
  2524     0362  2B66               	goto	l129
  2525     0363                     l128:	
  2526                           ;LCD.c: 16:     else
  2527                           
  2528                           
  2529                           ;LCD.c: 17:         RD4 = 0;
  2530     0363  1283               	bcf	3,5	;RP0=0, select bank0
  2531     0364  1303               	bcf	3,6	;RP1=0, select bank0
  2532     0365  1208               	bcf	8,4	;volatile
  2533     0366                     l129:
  2534                           
  2535                           ;LCD.c: 19:     if (a & 2)
  2536     0366  1CF2               	btfss	Lcd_Port@a,1
  2537     0367  2B69               	goto	u681
  2538     0368  2B6A               	goto	u680
  2539     0369                     u681:
  2540     0369  2B6C               	goto	l130
  2541     036A                     u680:
  2542     036A                     l1260:
  2543                           
  2544                           ;LCD.c: 20:         RD5 = 1;
  2545     036A  1688               	bsf	8,5	;volatile
  2546     036B  2B6D               	goto	l131
  2547     036C                     l130:	
  2548                           ;LCD.c: 21:     else
  2549                           
  2550                           
  2551                           ;LCD.c: 22:         RD5 = 0;
  2552     036C  1288               	bcf	8,5	;volatile
  2553     036D                     l131:
  2554                           
  2555                           ;LCD.c: 24:     if (a & 4)
  2556     036D  1D72               	btfss	Lcd_Port@a,2
  2557     036E  2B70               	goto	u691
  2558     036F  2B71               	goto	u690
  2559     0370                     u691:
  2560     0370  2B73               	goto	l132
  2561     0371                     u690:
  2562     0371                     l1262:
  2563                           
  2564                           ;LCD.c: 25:         RD6 = 1;
  2565     0371  1708               	bsf	8,6	;volatile
  2566     0372  2B74               	goto	l133
  2567     0373                     l132:	
  2568                           ;LCD.c: 26:     else
  2569                           
  2570                           
  2571                           ;LCD.c: 27:         RD6 = 0;
  2572     0373  1308               	bcf	8,6	;volatile
  2573     0374                     l133:
  2574                           
  2575                           ;LCD.c: 29:     if (a & 8)
  2576     0374  1DF2               	btfss	Lcd_Port@a,3
  2577     0375  2B77               	goto	u701
  2578     0376  2B78               	goto	u700
  2579     0377                     u701:
  2580     0377  2B7A               	goto	l134
  2581     0378                     u700:
  2582     0378                     l1264:
  2583                           
  2584                           ;LCD.c: 30:         RD7 = 1;
  2585     0378  1788               	bsf	8,7	;volatile
  2586     0379  2B7B               	goto	l136
  2587     037A                     l134:	
  2588                           ;LCD.c: 31:     else
  2589                           
  2590                           
  2591                           ;LCD.c: 32:         RD7 = 0;
  2592     037A  1388               	bcf	8,7	;volatile
  2593     037B                     l136:
  2594     037B  0008               	return
  2595     037C                     __end_of_Lcd_Port:
  2596                           
  2597                           	psect	text17
  2598     03ED                     __ptext17:	
  2599 ;; *************** function _isr *****************
  2600 ;; Defined at:
  2601 ;;		line 52 in file "Prelab3_Master.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		None
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0
  2617 ;;      Temps:          2       0       0       0       0
  2618 ;;      Totals:         2       0       0       0       0
  2619 ;;Total ram usage:        2 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		Interrupt level 1
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628     03ED                     _isr:	
  2629                           ;psect for function _isr
  2630                           
  2631     03ED                     i1l91:
  2632     03ED  0871               	movf	??_isr+1,w
  2633     03EE  008A               	movwf	10
  2634     03EF  0E70               	swapf	??_isr,w
  2635     03F0  0083               	movwf	3
  2636     03F1  0EFE               	swapf	btemp,f
  2637     03F2  0E7E               	swapf	btemp,w
  2638     03F3  0009               	retfie
  2639     03F4                     __end_of_isr:
  2640     007E                     btemp	set	126	;btemp
  2641     007E                     wtemp0	set	126
  2642                           
  2643                           	psect	intentry
  2644     0004                     __pintentry:	
  2645                           ;incstack = 0
  2646                           ; Regs used in _isr: []
  2647                           
  2648     0004                     interrupt_function:
  2649     007E                     saved_w	set	btemp
  2650     0004  00FE               	movwf	btemp
  2651     0005  0E03               	swapf	3,w
  2652     0006  00F0               	movwf	??_isr
  2653     0007  080A               	movf	10,w
  2654     0008  00F1               	movwf	??_isr+1
  2655     0009  120A  118A  2BED   	ljmp	_isr
  2656                           
  2657                           	psect	config
  2658                           
  2659                           ;Config register CONFIG1 @ 0x2007
  2660                           ;	Oscillator Selection bits
  2661                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2662                           ;	Watchdog Timer Enable bit
  2663                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2664                           ;	Power-up Timer Enable bit
  2665                           ;	PWRTE = OFF, PWRT disabled
  2666                           ;	RE3/MCLR pin function select bit
  2667                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2668                           ;	Code Protection bit
  2669                           ;	CP = OFF, Program memory code protection is disabled
  2670                           ;	Data Code Protection bit
  2671                           ;	CPD = OFF, Data memory code protection is disabled
  2672                           ;	Brown Out Reset Selection bits
  2673                           ;	BOREN = OFF, BOR disabled
  2674                           ;	Internal External Switchover bit
  2675                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2676                           ;	Fail-Safe Clock Monitor Enabled bit
  2677                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2678                           ;	Low Voltage Programming Enable bit
  2679                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2680                           ;	In-Circuit Debugger Mode bit
  2681                           ;	DEBUG = 0x1, unprogrammed default
  2682     2007                     	org	8199
  2683     2007  20D4               	dw	8404
  2684                           
  2685                           ;Config register CONFIG2 @ 0x2008
  2686                           ;	Brown-out Reset Selection bit
  2687                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2688                           ;	Flash Program Memory Self Write Enable bits
  2689                           ;	WRT = OFF, Write protection off
  2690     2008                     	org	8200
  2691     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[5]), count_s(BANK0[4]), 
		 -> pot1_s(BANK0[4]), pot0_s(BANK0[4]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> count_s(BANK0[4]), pot1_s(BANK0[4]), pot0_s(BANK0[4]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _requestValues->_spiWrite
    _separar_digitos8->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _outputValues->_separar_digitos8

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4382
                       _outputValues
                      _requestValues
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     639
                           _Lcd_Init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _requestValues                                        2     2      0      22
                                              3 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _outputValues                                         0     0      0    3721
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                    10     9      1    1982
                                              0 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     924
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     815
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _outputValues
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _separar_digitos8
       ___awdiv
       ___awmod
   _requestValues
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 03 13:08:30 2023

separar_digitos8@centenas 0031                         pc 0002               _SSPSTATbits 0094  
                      l20 03E6                        l23 03EC                        l16 03C4  
                      l17 03C9                        l34 03E5                        l26 03F9  
                      l96 03CF              ___awdiv@sign 0077                        fsr 0004  
                     l102 0359                       l111 009C                       l105 02BC  
                     l130 036C                       l131 036D                       l132 0373  
                     l108 0109                       l133 0374                       l134 037A  
                     l151 01CD                       l136 037B                       l128 0363  
                     l160 0302                       l129 0366                       l154 0337  
                     l139 03B3                       l148 0272                       l405 0170  
                     l418 0226                       _RC0 0038                       _RC1 0039  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u400 010F  
                     u401 010E                       u410 011A                       u411 0119  
                     u420 012B                       u500 01D3                       u421 012A  
                     u501 01D2                       u510 01DE                       u511 01DD  
                     u440 013D                       u520 01E9                       u441 013C  
                     u521 01E8                       u435 012F                       u700 0378  
                     u460 014E                       u540 01FB                       u380 03EC  
                     u701 0377                       u461 014D                       u541 01FA  
                     u381 03EB                       u550 0205                       u455 013E  
                     u551 0204                       u535 01ED                       u720 022F  
                     u480 0162                       u721 022E                       u481 0161  
                     u465 014A                       u490 0167                       u570 0218  
                     u715 0310                       u491 0166                       u475 0156  
                     u571 0217                       u555 0201                       u740 0254  
                     u580 021D                       u741 0253                       u581 021C  
                     u565 020C                       _SCS 0478                       u670 035F  
                     u590 03BC                       u671 035E                       u735 0235  
                     u807 018A                       u591 03BB                       u680 036A  
                     u760 02CC                       u681 0369                       u817 0199  
                     u690 0371                       u770 02F0                       u691 0370  
                     u755 025A                       u827 0281                       u780 0302  
                     u781 0301                       u837 029A                       u847 02AF  
                     u857 0320                       u867 0331                       u877 03AB  
                     u797 017B                       _isr 03ED                       fsr0 0004  
                     indf 0000              ___awmod@sign 0077                      l1100 01D3  
                    l1020 03E6                      l1110 01E9                      l1102 01D8  
                    l1120 0205                      l1112 01EC                      l1104 01DA  
                    l1130 0222                      l1122 020B                      l1114 01F3  
                    l1106 01DE                      l1210 0273  separar_digitos8@unidades 0033  
                    l1060 0116                      l1052 010A                      l1124 0212  
                    l1116 01F7                      l1108 01E3                      l1220 028F  
                    l1212 0277                      l1300 0180                      l1140 03C0  
                    l1070 012B                      l1062 011A                      l1054 010B  
                    l1118 01FB                      l1126 0218                      l1310 0092  
                    l1222 0290                      l1214 027D                      l1302 018F  
                    l1142 03C3                      l1134 03B5                      l1320 023F  
                    l1080 014E                      l1072 012E                      l1064 011F  
                    l1056 010F                      l1128 021D                      l1312 0097  
                    l1144 03F5                      l1224 0296                      l1216 0286  
                    l1304 0195                      l1136 03BC                      l1330 0264  
                    l1322 0245                      l1314 022A                      l1090 0167  
                    l1082 0154                      l1074 0135                      l1066 0123  
                    l1058 0114                      l1306 0027                      l1146 03DD  
                    l1226 02AB                      l1218 028C                      l1138 03BE  
                    l1260 036A                      l1332 026A                      l1316 022F  
                    l1324 024E                      l1340 02E6                      l1092 016C  
                    l1084 0155                      l1076 0139                      l1068 0125  
                    l1308 008B                      l1148 03E2                      l1228 02B4  
                    l1262 0371                      l1270 03A4                      l1326 0254  
                    l1318 023C                      l1334 02BD                      l1086 015C  
                    l1078 013D                      l1350 034C                      l1342 0338  
                    l1264 0378                      l1256 035B                      l1272 03A7  
                    l1328 0261                      l1280 030D                      l1336 02C2  
                    l1088 0162                      l1096 01CE                      l1360 00CC  
                    l1352 0350                      l1344 0342                      l1258 035F  
                    l1274 03B0                      l1266 039B                      l1290 032C  
                    l1282 031B                      l1338 02DE                      l1098 01CF  
                    l1362 00D5                      l1354 009D                      l1346 0346  
                    l1370 03CA                      l1268 039E                      l1292 032F  
                    l1284 031E                      l1276 0304                      l1364 00EF  
                    l1356 00BB                      l1348 0347                      l1372 03D4  
                    l1294 0334                      l1286 0323                      l1278 030A  
                    l1366 00F7                      l1358 00C3                      l1288 0326  
                    l1368 0100                      l1296 0171                      l1298 0177  
                    ?_isr 0070                      STR_1 038C                      STR_2 0391  
                    STR_3 0396                      i1l91 03ED         ?_Lcd_Write_String 0077  
                    _main 03CA                      _pot0 007B                      _pot1 007A  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 002D  
         __end_of_Lcd_Cmd 03B4                     ??_isr 0070                     ?_main 0070  
         __end_of___awdiv 0171           __end_of___awmod 0227                     _ANSEL 0188  
         ___awdiv@divisor 0072           ___awdiv@counter 0076                     _PORTD 0008  
                   _TRISC 0087                     _TRISD 0088              _outputValues 009D  
                   _count 0020                     _setup 0338         ?_separar_digitos8 002D  
                   pclath 000A           __end_of_spiInit 03CA           __end_of_spiRead 03E6  
      ??_separar_digitos8 002E                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 01CE          __end_of_Lcd_Port 037C           __initialization 000F  
            __end_of_main 03DD                    ??_main 007A          ___awdiv@dividend 0074  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0073  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013                 ??___awdiv 0076                 ??___awmod 0076  
                  _pot0_s 0029                    _pot1_s 0025          ___awdiv@quotient 0078  
         ___awmod@divisor 0072           ___awmod@counter 0076                    saved_w 007E  
        __end_of_spiWrite 03FA                 ??_spiInit 0075                 ??_spiRead 0072  
         Lcd_Set_Cursor@a 002D           Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 002F  
         Lcd_Set_Cursor@z 002E   __end_of__initialization 0020            __pcstackCOMMON 0070  
           __end_of_setup 035A            _Lcd_Set_Cursor 0227                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0078                __pbssBANK0 0020  
   __end_of_requestValues 02BD                __pmaintext 03CA                __pintentry 0004  
  __end_of_Lcd_Set_Cursor 0273                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
                 _SSPSTAT 0094                __stringtab 037C            _Lcd_Write_Char 0303  
                 _Lcd_Cmd 039A                 ?_spiWrite 0070                   ___awdiv 010A  
                 ___awmod 01CE           ?_Lcd_Set_Cursor 0076                   __ptext1 0338  
                 __ptext2 03B4                   __ptext3 0171                   __ptext4 0273  
                 __ptext5 03F4                   __ptext6 03DD                   __ptext7 03E6  
                 __ptext8 009D                   __ptext9 0024                   _count_s 0021  
        ___awmod@dividend 0074                   _spiInit 03B4                   _spiRead 03DD  
  __end_of_Lcd_Write_Char 0338      end_of_initialization 0020                ??_spiWrite 0072  
               Lcd_Port@a 0072                 _PORTDbits 0008   separar_digitos8@decenas 0032  
             spiWrite@dat 0072           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077  
       Lcd_Write_String@i 0030            _spiReceiveWait 03E6          _Lcd_Write_String 02BD  
     start_initialization 000F               __end_of_isr 03F4    __end_of_spiReceiveWait 03ED  
        _separar_digitos8 0024           Lcd_Write_Char@a 0076           Lcd_Write_Char@y 0075  
           ?_outputValues 0070               __pbssCOMMON 007A                 ___latbits 0002  
           __pcstackBANK0 002D                  ?_Lcd_Cmd 0070           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0077                  ?___awdiv 0072                  ?___awmod 0072  
               __pstrings 037C            ??_outputValues 007A                  ?_spiInit 0072  
                ?_spiRead 0070      spiInit@sTransmitEdge 0074         interrupt_function 0004  
      spiInit@sDataSample 0072                  Lcd_Cmd@a 0075               __stringbase 038B  
        ??_Lcd_Write_Char 0073                  _Lcd_Init 0171                  _Lcd_Port 035A  
__end_of_Lcd_Write_String 0303             _requestValues 0273        __end_of__stringtab 038C  
                __ptext10 01CE                  __ptext11 010A                  __ptext12 02BD  
                __ptext13 0303                  __ptext14 0227                  __ptext15 039A  
                __ptext16 035A                  __ptext17 03ED  __end_of_separar_digitos8 009D  
    __end_of_outputValues 010A            ?_requestValues 0070                  _spiWrite 03F4  
            spiInit@sType 0075         spiInit@sClockIdle 0073        Lcd_Write_Char@temp 0074  
                intlevel1 0000          ??_spiReceiveWait 0072                 stringcode 0386  
              _OSCCONbits 008F      separar_digitos8@dig8 002D      separar_digitos8@div1 0035  
    separar_digitos8@div2 0030        Lcd_Set_Cursor@temp 0030                  stringdir 0386  
                stringtab 037C       separar_digitos8@num 0034           ??_requestValues 0073  
