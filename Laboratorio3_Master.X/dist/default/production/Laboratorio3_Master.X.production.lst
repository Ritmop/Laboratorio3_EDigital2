

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 03 17:47:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 22/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0008                     _PORTDbits	set	8
   379     0008                     _PORTD	set	8
   380     0013                     _SSPBUF	set	19
   381     0014                     _SSPCON	set	20
   382     0043                     _RD3	set	67
   383     0047                     _RD7	set	71
   384     0046                     _RD6	set	70
   385     0045                     _RD5	set	69
   386     0044                     _RD4	set	68
   387     0038                     _RC0	set	56
   388     0039                     _RC1	set	57
   389     0087                     _TRISC	set	135
   390     008F                     _OSCCONbits	set	143
   391     0088                     _TRISD	set	136
   392     0094                     _SSPSTATbits	set	148
   393     0094                     _SSPSTAT	set	148
   394     0478                     _SCS	set	1144
   395     043B                     _TRISC3	set	1083
   396     043D                     _TRISC5	set	1085
   397     0189                     _ANSELH	set	393
   398     0188                     _ANSEL	set	392
   399                           
   400                           	psect	strings
   401     0380                     __pstrings:
   402     0380                     stringtab:
   403     0380                     __stringtab:
   404                           
   405                           ;	String table - string pointers are 1 byte each
   406     0380  1BFF               	btfsc	btemp+1,7
   407     0381  2B8A               	ljmp	stringcode
   408     0382  1383               	bcf	3,7
   409     0383  187F               	btfsc	btemp+1,0
   410     0384  1783               	bsf	3,7
   411     0385  0800               	movf	0,w
   412     0386  0A84               	incf	4,f
   413     0387  1903               	skipnz
   414     0388  0AFF               	incf	btemp+1,f
   415     0389  0008               	return
   416     038A                     stringcode:
   417     038A                     stringdir:
   418     038A  3003               	movlw	high stringdir
   419     038B  008A               	movwf	10
   420     038C  0804               	movf	4,w
   421     038D  0A84               	incf	4,f
   422     038E  0782               	addwf	2,f
   423     038F                     __stringbase:
   424     038F  3400               	retlw	0
   425     0390                     __end_of__stringtab:
   426     0390                     STR_1:
   427     0390  3450               	retlw	80	;'P'
   428     0391  3430               	retlw	48	;'0'
   429     0392  343A               	retlw	58	;':'
   430     0393  3420               	retlw	32	;' '
   431     0394  3400               	retlw	0
   432     0395                     STR_2:
   433     0395  3450               	retlw	80	;'P'
   434     0396  3431               	retlw	49	;'1'
   435     0397  343A               	retlw	58	;':'
   436     0398  3420               	retlw	32	;' '
   437     0399  3400               	retlw	0
   438     039A                     STR_3:
   439     039A  3443               	retlw	67	;'C'
   440     039B  343A               	retlw	58	;':'
   441     039C  3420               	retlw	32	;' '
   442     039D  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445     000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448     000F                     __initialization:
   449                           
   450                           ; Clear objects allocated to COMMON
   451     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   452     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455     0011  1283               	bcf	3,5	;RP0=0, select bank0
   456     0012  1303               	bcf	3,6	;RP1=0, select bank0
   457     0013  01A0               	clrf	__pbssBANK0& (0+127)
   458     0014  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   459     0015  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   460     0016  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   461     0017  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   462     0018  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   463     0019  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   464     001A  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   465     001B  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   466     001C  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   467     001D  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   468     001E  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   469     001F  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   470     0020  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   471     0021  01AE               	clrf	(__pbssBANK0+14)& (0+127)
   472     0022                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475     0022                     __end_of__initialization:
   476     0022  0183               	clrf	3
   477     0023  120A  118A  2BCE   	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	bssCOMMON
   480     007A                     __pbssCOMMON:
   481     007A                     _pot1:
   482     007A                     	ds	1
   483     007B                     _pot0:
   484     007B                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487     0020                     __pbssBANK0:
   488     0020                     _t:
   489     0020                     	ds	2
   490     0022                     _count:
   491     0022                     	ds	1
   492     0023                     _count_s:
   493     0023                     	ds	4
   494     0027                     _pot1_s:
   495     0027                     	ds	4
   496     002B                     _pot0_s:
   497     002B                     	ds	4
   498                           
   499                           	psect	cstackCOMMON
   500     0070                     __pcstackCOMMON:
   501     0070                     ?_setup:
   502     0070                     ?_requestValues:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_outputValues:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_Lcd_Init:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_spiReceiveWait:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_spiWrite:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_spiRead:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_isr:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ??_isr:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ?_Lcd_Port:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_Lcd_Cmd:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_Lcd_Write_Char:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_main:	
   536                           ; 1 bytes @ 0x0
   537                           
   538                           
   539                           ; 2 bytes @ 0x0
   540     0070                     	ds	2
   541     0072                     ?_spiInit:
   542     0072                     ??_spiReceiveWait:	
   543                           ; 1 bytes @ 0x2
   544                           
   545     0072                     ??_spiWrite:	
   546                           ; 1 bytes @ 0x2
   547                           
   548     0072                     ??_spiRead:	
   549                           ; 1 bytes @ 0x2
   550                           
   551     0072                     ??_Lcd_Port:	
   552                           ; 1 bytes @ 0x2
   553                           
   554     0072                     ?___awdiv:	
   555                           ; 1 bytes @ 0x2
   556                           
   557     0072                     ?___awmod:	
   558                           ; 2 bytes @ 0x2
   559                           
   560     0072                     spiInit@sDataSample:	
   561                           ; 2 bytes @ 0x2
   562                           
   563     0072                     spiWrite@dat:	
   564                           ; 1 bytes @ 0x2
   565                           
   566     0072                     Lcd_Port@a:	
   567                           ; 1 bytes @ 0x2
   568                           
   569     0072                     ___awdiv@divisor:	
   570                           ; 1 bytes @ 0x2
   571                           
   572     0072                     ___awmod@divisor:	
   573                           ; 2 bytes @ 0x2
   574                           
   575                           
   576                           ; 2 bytes @ 0x2
   577     0072                     	ds	1
   578     0073                     ??_requestValues:
   579     0073                     ??_Lcd_Cmd:	
   580                           ; 1 bytes @ 0x3
   581                           
   582     0073                     ??_Lcd_Write_Char:	
   583                           ; 1 bytes @ 0x3
   584                           
   585     0073                     spiInit@sClockIdle:	
   586                           ; 1 bytes @ 0x3
   587                           
   588                           
   589                           ; 1 bytes @ 0x3
   590     0073                     	ds	1
   591     0074                     spiInit@sTransmitEdge:
   592     0074                     Lcd_Write_Char@temp:	
   593                           ; 1 bytes @ 0x4
   594                           
   595     0074                     ___awdiv@dividend:	
   596                           ; 1 bytes @ 0x4
   597                           
   598     0074                     ___awmod@dividend:	
   599                           ; 2 bytes @ 0x4
   600                           
   601                           
   602                           ; 2 bytes @ 0x4
   603     0074                     	ds	1
   604     0075                     ??_spiInit:
   605     0075                     spiInit@sType:	
   606                           ; 1 bytes @ 0x5
   607                           
   608     0075                     Lcd_Cmd@a:	
   609                           ; 1 bytes @ 0x5
   610                           
   611     0075                     Lcd_Write_Char@y:	
   612                           ; 1 bytes @ 0x5
   613                           
   614                           
   615                           ; 1 bytes @ 0x5
   616     0075                     	ds	1
   617     0076                     ??_Lcd_Init:
   618     0076                     ?_Lcd_Set_Cursor:	
   619                           ; 1 bytes @ 0x6
   620                           
   621     0076                     ??___awdiv:	
   622                           ; 1 bytes @ 0x6
   623                           
   624     0076                     ??___awmod:	
   625                           ; 1 bytes @ 0x6
   626                           
   627     0076                     Lcd_Set_Cursor@b:	
   628                           ; 1 bytes @ 0x6
   629                           
   630     0076                     Lcd_Write_Char@a:	
   631                           ; 1 bytes @ 0x6
   632                           
   633     0076                     ___awdiv@counter:	
   634                           ; 1 bytes @ 0x6
   635                           
   636     0076                     ___awmod@counter:	
   637                           ; 1 bytes @ 0x6
   638                           
   639                           
   640                           ; 1 bytes @ 0x6
   641     0076                     	ds	1
   642     0077                     ??_Lcd_Set_Cursor:
   643     0077                     ?_Lcd_Write_String:	
   644                           ; 1 bytes @ 0x7
   645                           
   646     0077                     ___awdiv@sign:	
   647                           ; 1 bytes @ 0x7
   648                           
   649     0077                     ___awmod@sign:	
   650                           ; 1 bytes @ 0x7
   651                           
   652     0077                     Lcd_Write_String@a:	
   653                           ; 1 bytes @ 0x7
   654                           
   655                           
   656                           ; 2 bytes @ 0x7
   657     0077                     	ds	1
   658     0078                     ??_setup:
   659     0078                     ___awdiv@quotient:	
   660                           ; 1 bytes @ 0x8
   661                           
   662                           
   663                           ; 2 bytes @ 0x8
   664     0078                     	ds	2
   665     007A                     ??_outputValues:
   666     007A                     ??_main:	
   667                           ; 1 bytes @ 0xA
   668                           
   669                           
   670                           	psect	cstackBANK0
   671     002F                     __pcstackBANK0:	
   672                           ; 1 bytes @ 0xA
   673                           
   674     002F                     ?_separar_digitos8:
   675     002F                     ??_Lcd_Write_String:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     002F                     separar_digitos8@dig8:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     002F                     Lcd_Set_Cursor@a:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686     002F                     	ds	1
   687     0030                     ??_separar_digitos8:
   688     0030                     Lcd_Set_Cursor@z:	
   689                           ; 1 bytes @ 0x1
   690                           
   691                           
   692                           ; 1 bytes @ 0x1
   693     0030                     	ds	1
   694     0031                     Lcd_Set_Cursor@y:
   695                           
   696                           ; 1 bytes @ 0x2
   697     0031                     	ds	1
   698     0032                     separar_digitos8@div2:
   699     0032                     Lcd_Set_Cursor@temp:	
   700                           ; 1 bytes @ 0x3
   701                           
   702     0032                     Lcd_Write_String@i:	
   703                           ; 1 bytes @ 0x3
   704                           
   705                           
   706                           ; 2 bytes @ 0x3
   707     0032                     	ds	1
   708     0033                     separar_digitos8@centenas:
   709                           
   710                           ; 1 bytes @ 0x4
   711     0033                     	ds	1
   712     0034                     separar_digitos8@decenas:
   713                           
   714                           ; 1 bytes @ 0x5
   715     0034                     	ds	1
   716     0035                     separar_digitos8@unidades:
   717                           
   718                           ; 1 bytes @ 0x6
   719     0035                     	ds	1
   720     0036                     separar_digitos8@num:
   721                           
   722                           ; 1 bytes @ 0x7
   723     0036                     	ds	1
   724     0037                     separar_digitos8@div1:
   725                           
   726                           ; 1 bytes @ 0x8
   727     0037                     	ds	1
   728                           
   729                           	psect	maintext
   730     03CE                     __pmaintext:	
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 60 in file "Prelab3_Master.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2   97[None  ] int 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   750 ;;      Params:         0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels required when called: 5
   756 ;; This function calls:
   757 ;;		_outputValues
   758 ;;		_requestValues
   759 ;;		_setup
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765     03CE                     _main:	
   766                           ;psect for function _main
   767                           
   768     03CE                     l1374:	
   769                           ;incstack = 0
   770                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   771                           
   772                           
   773                           ;Prelab3_Master.c: 61:     RC0 = 1;
   774     03CE  120A  118A  233C  120A  118A  	fcall	_setup
   775     03D3                     l98:	
   776                           ;Prelab3_Master.c: 62:     RC1 = 0;
   777                           
   778                           
   779                           ;Prelab3_Master.c: 64: 
   780     03D3  120A  118A  2229  120A  118A  	fcall	_requestValues
   781     03D8                     l1376:
   782                           
   783                           ;Prelab3_Master.c: 65:         spiWrite('P');
   784     03D8  120A  118A  209F  120A  118A  	fcall	_outputValues
   785     03DD  2BD3               	goto	l98
   786     03DE  120A  118A  280C   	ljmp	start
   787     03E1                     __end_of_main:
   788                           
   789                           	psect	text1
   790     033C                     __ptext1:	
   791 ;; *************** function _setup *****************
   792 ;; Defined at:
   793 ;;		line 69 in file "Prelab3_Master.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 4
   814 ;; This function calls:
   815 ;;		_Lcd_Init
   816 ;;		_spiInit
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822     033C                     _setup:	
   823                           ;psect for function _setup
   824                           
   825     033C                     l1346:	
   826                           ;incstack = 0
   827                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   828                           
   829                           
   830                           ;Prelab3_Master.c: 70:         spiWrite('C');
   831     033C  1683               	bsf	3,5	;RP0=1, select bank3
   832     033D  1703               	bsf	3,6	;RP1=1, select bank3
   833     033E  0188               	clrf	8	;volatile
   834                           
   835                           ;Prelab3_Master.c: 71:         count = spiRead();
   836     033F  0189               	clrf	9	;volatile
   837                           
   838                           ;Prelab3_Master.c: 73:     t = ~t;
   839     0340  1683               	bsf	3,5	;RP0=1, select bank1
   840     0341  1303               	bcf	3,6	;RP1=0, select bank1
   841     0342  0188               	clrf	8	;volatile
   842                           
   843                           ;Prelab3_Master.c: 74:     _delay((unsigned long)((1)*(8000000/4000.0)));
   844     0343  1283               	bcf	3,5	;RP0=0, select bank0
   845     0344  1303               	bcf	3,6	;RP1=0, select bank0
   846     0345  0188               	clrf	8	;volatile
   847     0346                     l1348:
   848     0346  3070               	movlw	112
   849     0347  1683               	bsf	3,5	;RP0=1, select bank1
   850     0348  1303               	bcf	3,6	;RP1=0, select bank1
   851     0349  048F               	iorwf	15,f	;volatile
   852     034A                     l1350:
   853     034A  140F               	bsf	15,0	;volatile
   854     034B                     l1352:
   855     034B  120A  118A  2173  120A  118A  	fcall	_Lcd_Init
   856     0350                     l1354:
   857     0350  30D4               	movlw	212
   858     0351  1683               	bsf	3,5	;RP0=1, select bank1
   859     0352  1303               	bcf	3,6	;RP1=0, select bank1
   860     0353  0087               	movwf	7	;volatile
   861     0354                     l1356:
   862     0354  01F2               	clrf	spiInit@sDataSample
   863     0355  01F3               	clrf	spiInit@sClockIdle
   864     0356  01F4               	clrf	spiInit@sTransmitEdge
   865     0357  3020               	movlw	32
   866     0358  120A  118A  23B8  120A  118A  	fcall	_spiInit
   867     035D                     l104:
   868     035D  0008               	return
   869     035E                     __end_of_setup:
   870                           
   871                           	psect	text2
   872     03B8                     __ptext2:	
   873 ;; *************** function _spiInit *****************
   874 ;; Defined at:
   875 ;;		line 12 in file "../../../LibreriasPIC/SPI.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  sType           1    wreg     enum E1292
   878 ;;  sDataSample     1    2[COMMON] enum E1300
   879 ;;  sClockIdle      1    3[COMMON] enum E1304
   880 ;;  sTransmitEdg    1    4[COMMON] enum E1308
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  sType           1    5[COMMON] enum E1292
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         3       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0
   895 ;;      Totals:         4       0       0       0       0
   896 ;;Total ram usage:        4 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_setup
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906     03B8                     _spiInit:	
   907                           ;psect for function _spiInit
   908                           
   909                           
   910                           ;incstack = 0
   911                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   912                           ;spiInit@sType stored from wreg
   913     03B8  00F5               	movwf	spiInit@sType
   914     03B9                     l1138:
   915                           
   916                           ;../../../LibreriasPIC/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSamp
      +                          le, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../../../LibreriasPIC/SP
      +                          I.c: 13: {;../../../LibreriasPIC/SPI.c: 14:     TRISC5 = 0;
   917     03B9  1683               	bsf	3,5	;RP0=1, select bank1
   918     03BA  1303               	bcf	3,6	;RP1=0, select bank1
   919     03BB  1287               	bcf	7,5	;volatile
   920                           
   921                           ;../../../LibreriasPIC/SPI.c: 15:     if(sType & 0b00000100)
   922     03BC  1D75               	btfss	spiInit@sType,2
   923     03BD  2BBF               	goto	u601
   924     03BE  2BC0               	goto	u600
   925     03BF                     u601:
   926     03BF  2BC4               	goto	l1144
   927     03C0                     u600:
   928     03C0                     l1140:
   929                           
   930                           ;../../../LibreriasPIC/SPI.c: 16:     {;../../../LibreriasPIC/SPI.c: 17:         SSPSTAT
      +                           = sTransmitEdge;
   931     03C0  0874               	movf	spiInit@sTransmitEdge,w
   932     03C1  0094               	movwf	20	;volatile
   933     03C2                     l1142:
   934                           
   935                           ;../../../LibreriasPIC/SPI.c: 18:         TRISC3 = 1;
   936     03C2  1587               	bsf	7,3	;volatile
   937                           
   938                           ;../../../LibreriasPIC/SPI.c: 19:     }
   939     03C3  2BC8               	goto	l16
   940     03C4                     l1144:
   941                           
   942                           ;../../../LibreriasPIC/SPI.c: 21:     {;../../../LibreriasPIC/SPI.c: 22:         SSPSTAT
      +                           = sDataSample | sTransmitEdge;
   943     03C4  0872               	movf	spiInit@sDataSample,w
   944     03C5  0474               	iorwf	spiInit@sTransmitEdge,w
   945     03C6  0094               	movwf	20	;volatile
   946     03C7                     l1146:
   947                           
   948                           ;../../../LibreriasPIC/SPI.c: 23:         TRISC3 = 0;
   949     03C7  1187               	bcf	7,3	;volatile
   950     03C8                     l16:	
   951                           ;../../../LibreriasPIC/SPI.c: 24:     }
   952                           
   953                           
   954                           ;../../../LibreriasPIC/SPI.c: 26:     SSPCON = sType | sClockIdle;
   955     03C8  0875               	movf	spiInit@sType,w
   956     03C9  0473               	iorwf	spiInit@sClockIdle,w
   957     03CA  1283               	bcf	3,5	;RP0=0, select bank0
   958     03CB  1303               	bcf	3,6	;RP1=0, select bank0
   959     03CC  0094               	movwf	20	;volatile
   960     03CD                     l17:
   961     03CD  0008               	return
   962     03CE                     __end_of_spiInit:
   963                           
   964                           	psect	text3
   965     0173                     __ptext3:	
   966 ;; *************** function _Lcd_Init *****************
   967 ;; Defined at:
   968 ;;		line 65 in file "LCD.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          2       0       0       0       0
   985 ;;      Totals:         2       0       0       0       0
   986 ;;Total ram usage:        2 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 3
   989 ;; This function calls:
   990 ;;		_Lcd_Cmd
   991 ;;		_Lcd_Port
   992 ;; This function is called by:
   993 ;;		_setup
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997     0173                     _Lcd_Init:	
   998                           ;psect for function _Lcd_Init
   999                           
  1000     0173                     l1300:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1003                           
  1004                           
  1005                           ;LCD.c: 66:     Lcd_Port(0x00);
  1006     0173  3000               	movlw	0
  1007     0174  120A  118A  235E  120A  118A  	fcall	_Lcd_Port
  1008     0179                     l1302:
  1009                           
  1010                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1011     0179  3034               	movlw	52
  1012     017A  00F7               	movwf	??_Lcd_Init+1
  1013     017B  30F1               	movlw	241
  1014     017C  00F6               	movwf	??_Lcd_Init
  1015     017D                     u817:
  1016     017D  0BF6               	decfsz	??_Lcd_Init,f
  1017     017E  297D               	goto	u817
  1018     017F  0BF7               	decfsz	??_Lcd_Init+1,f
  1019     0180  297D               	goto	u817
  1020     0181  2982               	nop2
  1021     0182                     l1304:
  1022                           
  1023                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1024     0182  3003               	movlw	3
  1025     0183  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1026                           
  1027                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1028     0188  300D               	movlw	13
  1029     0189  00F7               	movwf	??_Lcd_Init+1
  1030     018A  30FB               	movlw	251
  1031     018B  00F6               	movwf	??_Lcd_Init
  1032     018C                     u827:
  1033     018C  0BF6               	decfsz	??_Lcd_Init,f
  1034     018D  298C               	goto	u827
  1035     018E  0BF7               	decfsz	??_Lcd_Init+1,f
  1036     018F  298C               	goto	u827
  1037     0190  2991               	nop2
  1038     0191                     l1306:
  1039                           
  1040                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1041     0191  3003               	movlw	3
  1042     0192  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1043     0197                     l1308:
  1044                           
  1045                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1046     0197  301D               	movlw	29
  1047     0198  00F7               	movwf	??_Lcd_Init+1
  1048     0199  3091               	movlw	145
  1049     019A  00F6               	movwf	??_Lcd_Init
  1050     019B                     u837:
  1051     019B  0BF6               	decfsz	??_Lcd_Init,f
  1052     019C  299B               	goto	u837
  1053     019D  0BF7               	decfsz	??_Lcd_Init+1,f
  1054     019E  299B               	goto	u837
  1055                           
  1056                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1057     019F  3003               	movlw	3
  1058     01A0  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1059                           
  1060                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1061     01A5  3002               	movlw	2
  1062     01A6  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1063                           
  1064                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1065     01AB  3002               	movlw	2
  1066     01AC  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1067                           
  1068                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1069     01B1  3008               	movlw	8
  1070     01B2  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1071                           
  1072                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1073     01B7  3000               	movlw	0
  1074     01B8  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1075                           
  1076                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1077     01BD  300C               	movlw	12
  1078     01BE  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1079                           
  1080                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1081     01C3  3000               	movlw	0
  1082     01C4  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1083                           
  1084                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1085     01C9  3006               	movlw	6
  1086     01CA  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  1087     01CF                     l155:
  1088     01CF  0008               	return
  1089     01D0                     __end_of_Lcd_Init:
  1090                           
  1091                           	psect	text4
  1092     0229                     __ptext4:	
  1093 ;; *************** function _requestValues *****************
  1094 ;; Defined at:
  1095 ;;		line 88 in file "Prelab3_Master.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          2       0       0       0       0
  1112 ;;      Totals:         2       0       0       0       0
  1113 ;;Total ram usage:        2 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 3
  1116 ;; This function calls:
  1117 ;;		_spiRead
  1118 ;;		_spiWrite
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     0229                     _requestValues:	
  1125                           ;psect for function _requestValues
  1126                           
  1127     0229                     l1214:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _requestValues: [wreg+status,2+status,0+pclath+cstack]
  1130                           
  1131     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1132     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1133     022B  1487               	bsf	7,1	;volatile
  1134     022C  1007               	bcf	7,0	;volatile
  1135     022D                     l1216:
  1136     022D  3050               	movlw	80
  1137     022E  120A  118A  23F8  120A  118A  	fcall	_spiWrite
  1138     0233  120A  118A  23E1  120A  118A  	fcall	_spiRead
  1139     0238  00FB               	movwf	_pot0
  1140     0239                     l1218:
  1141     0239  3003               	movlw	3
  1142     023A  00F4               	movwf	??_requestValues+1
  1143     023B  3097               	movlw	151
  1144     023C  00F3               	movwf	??_requestValues
  1145     023D                     u847:
  1146     023D  0BF3               	decfsz	??_requestValues,f
  1147     023E  2A3D               	goto	u847
  1148     023F  0BF4               	decfsz	??_requestValues+1,f
  1149     0240  2A3D               	goto	u847
  1150     0241  2A42               	nop2
  1151     0242                     l1220:
  1152     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1153     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1154     0244  1407               	bsf	7,0	;volatile
  1155     0245                     l1222:
  1156     0245  1087               	bcf	7,1	;volatile
  1157     0246                     l1224:
  1158     0246  0820               	movf	_t,w
  1159     0247  0421               	iorwf	_t+1,w
  1160     0248  1903               	btfsc	3,2
  1161     0249  2A4B               	goto	u681
  1162     024A  2A4C               	goto	u680
  1163     024B                     u681:
  1164     024B  2A59               	goto	l1228
  1165     024C                     u680:
  1166     024C                     l1226:
  1167     024C  3050               	movlw	80
  1168     024D  120A  118A  23F8  120A  118A  	fcall	_spiWrite
  1169     0252  120A  118A  23E1  120A  118A  	fcall	_spiRead
  1170     0257  00FA               	movwf	_pot1
  1171     0258  2A67               	goto	l1230
  1172     0259                     l1228:
  1173     0259  3043               	movlw	67
  1174     025A  120A  118A  23F8  120A  118A  	fcall	_spiWrite
  1175     025F  120A  118A  23E1  120A  118A  	fcall	_spiRead
  1176     0264  1283               	bcf	3,5	;RP0=0, select bank0
  1177     0265  1303               	bcf	3,6	;RP1=0, select bank0
  1178     0266  00A2               	movwf	_count
  1179     0267                     l1230:
  1180     0267  1283               	bcf	3,5	;RP0=0, select bank0
  1181     0268  1303               	bcf	3,6	;RP1=0, select bank0
  1182     0269  09A0               	comf	_t,f
  1183     026A  09A1               	comf	_t+1,f
  1184     026B                     l1232:
  1185     026B  3003               	movlw	3
  1186     026C  00F4               	movwf	??_requestValues+1
  1187     026D  3097               	movlw	151
  1188     026E  00F3               	movwf	??_requestValues
  1189     026F                     u857:
  1190     026F  0BF3               	decfsz	??_requestValues,f
  1191     0270  2A6F               	goto	u857
  1192     0271  0BF4               	decfsz	??_requestValues+1,f
  1193     0272  2A6F               	goto	u857
  1194     0273  2A74               	nop2
  1195     0274                     l109:
  1196     0274  0008               	return
  1197     0275                     __end_of_requestValues:
  1198                           
  1199                           	psect	text5
  1200     03F8                     __ptext5:	
  1201 ;; *************** function _spiWrite *****************
  1202 ;; Defined at:
  1203 ;;		line 34 in file "../../../LibreriasPIC/SPI.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  dat             1    wreg     unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  dat             1    2[COMMON] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         1       0       0       0       0
  1221 ;;Total ram usage:        1 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_requestValues
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231     03F8                     _spiWrite:	
  1232                           ;psect for function _spiWrite
  1233                           
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _spiWrite: [wreg]
  1237                           ;spiWrite@dat stored from wreg
  1238     03F8  00F2               	movwf	spiWrite@dat
  1239     03F9                     l1148:
  1240                           
  1241                           ;../../../LibreriasPIC/SPI.c: 34: void spiWrite(char dat);../../../LibreriasPIC/SPI.c: 3
      +                          5: {;../../../LibreriasPIC/SPI.c: 36:     SSPBUF = dat;
  1242     03F9  0872               	movf	spiWrite@dat,w
  1243     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1244     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1245     03FC  0093               	movwf	19	;volatile
  1246     03FD                     l26:
  1247     03FD  0008               	return
  1248     03FE                     __end_of_spiWrite:
  1249                           
  1250                           	psect	text6
  1251     03E1                     __ptext6:	
  1252 ;; *************** function _spiRead *****************
  1253 ;; Defined at:
  1254 ;;		line 47 in file "../../../LibreriasPIC/SPI.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      unsigned char 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, pclath, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; Hardware stack levels required when called: 2
  1275 ;; This function calls:
  1276 ;;		_spiReceiveWait
  1277 ;; This function is called by:
  1278 ;;		_requestValues
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282     03E1                     _spiRead:	
  1283                           ;psect for function _spiRead
  1284                           
  1285     03E1                     l1150:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1288                           
  1289                           
  1290                           ;../../../LibreriasPIC/SPI.c: 49:     spiReceiveWait();
  1291     03E1  120A  118A  23EA  120A  118A  	fcall	_spiReceiveWait
  1292     03E6                     l1152:
  1293                           
  1294                           ;../../../LibreriasPIC/SPI.c: 50:     return(SSPBUF);
  1295     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1296     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1297     03E8  0813               	movf	19,w	;volatile
  1298     03E9                     l34:
  1299     03E9  0008               	return
  1300     03EA                     __end_of_spiRead:
  1301                           
  1302                           	psect	text7
  1303     03EA                     __ptext7:	
  1304 ;; *************** function _spiReceiveWait *****************
  1305 ;; Defined at:
  1306 ;;		line 29 in file "../../../LibreriasPIC/SPI.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		None
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_spiRead
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     03EA                     _spiReceiveWait:	
  1335                           ;psect for function _spiReceiveWait
  1336                           
  1337     03EA                     l1024:	
  1338                           ;incstack = 0
  1339                           ; Regs used in _spiReceiveWait: []
  1340                           
  1341     03EA                     l20:	
  1342                           ;../../../LibreriasPIC/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1343                           
  1344     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1345     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1346     03EC  1C14               	btfss	20,0	;volatile
  1347     03ED  2BEF               	goto	u391
  1348     03EE  2BF0               	goto	u390
  1349     03EF                     u391:
  1350     03EF  2BEA               	goto	l20
  1351     03F0                     u390:
  1352     03F0                     l23:
  1353     03F0  0008               	return
  1354     03F1                     __end_of_spiReceiveWait:
  1355                           
  1356                           	psect	text8
  1357     009F                     __ptext8:	
  1358 ;; *************** function _outputValues *****************
  1359 ;; Defined at:
  1360 ;;		line 124 in file "Prelab3_Master.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 4
  1381 ;; This function calls:
  1382 ;;		_Lcd_Set_Cursor
  1383 ;;		_Lcd_Write_String
  1384 ;;		_separar_digitos8
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390     009F                     _outputValues:	
  1391                           ;psect for function _outputValues
  1392                           
  1393     009F                     l1358:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _outputValues: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1396                           
  1397                           
  1398                           ;Prelab3_Master.c: 126:     separar_digitos8(pot0,pot0_s);
  1399     009F  302B               	movlw	(low (_pot0_s| 0))& (0+255)
  1400     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1401     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1402     00A2  00AF               	movwf	separar_digitos8@dig8
  1403     00A3  087B               	movf	_pot0,w
  1404     00A4  120A  118A  2026  120A  118A  	fcall	_separar_digitos8
  1405                           
  1406                           ;Prelab3_Master.c: 127:     separar_digitos8(pot1,pot1_s);
  1407     00A9  3027               	movlw	(low (_pot1_s| 0))& (0+255)
  1408     00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1409     00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1410     00AC  00AF               	movwf	separar_digitos8@dig8
  1411     00AD  087A               	movf	_pot1,w
  1412     00AE  120A  118A  2026  120A  118A  	fcall	_separar_digitos8
  1413                           
  1414                           ;Prelab3_Master.c: 128:     separar_digitos8(count,count_s);
  1415     00B3  3023               	movlw	(low (_count_s| 0))& (0+255)
  1416     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1417     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1418     00B6  00AF               	movwf	separar_digitos8@dig8
  1419     00B7  0822               	movf	_count,w
  1420     00B8  120A  118A  2026  120A  118A  	fcall	_separar_digitos8
  1421     00BD                     l1360:
  1422                           
  1423                           ;Prelab3_Master.c: 130:     Lcd_Set_Cursor(1,1);
  1424     00BD  01F6               	clrf	Lcd_Set_Cursor@b
  1425     00BE  0AF6               	incf	Lcd_Set_Cursor@b,f
  1426     00BF  3001               	movlw	1
  1427     00C0  120A  118A  2275  120A  118A  	fcall	_Lcd_Set_Cursor
  1428     00C5                     l1362:
  1429                           
  1430                           ;Prelab3_Master.c: 131:     Lcd_Write_String("P0: ");
  1431     00C5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1432     00C6  00F7               	movwf	Lcd_Write_String@a
  1433     00C7  3080               	movlw	128
  1434     00C8  00F8               	movwf	Lcd_Write_String@a+1
  1435     00C9  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1436     00CE                     l1364:
  1437                           
  1438                           ;Prelab3_Master.c: 132:     Lcd_Write_String(pot0_s);
  1439     00CE  302B               	movlw	(low (_pot0_s| 0))& (0+255)
  1440     00CF  00F7               	movwf	Lcd_Write_String@a
  1441     00D0  3000               	movlw	0
  1442     00D1  00F8               	movwf	Lcd_Write_String@a+1
  1443     00D2  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1444     00D7                     l1366:
  1445                           
  1446                           ;Prelab3_Master.c: 134:     Lcd_Set_Cursor(2,1);
  1447     00D7  01F6               	clrf	Lcd_Set_Cursor@b
  1448     00D8  0AF6               	incf	Lcd_Set_Cursor@b,f
  1449     00D9  3002               	movlw	2
  1450     00DA  120A  118A  2275  120A  118A  	fcall	_Lcd_Set_Cursor
  1451                           
  1452                           ;Prelab3_Master.c: 135:     Lcd_Write_String("P1: ");
  1453     00DF  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1454     00E0  00F7               	movwf	Lcd_Write_String@a
  1455     00E1  3080               	movlw	128
  1456     00E2  00F8               	movwf	Lcd_Write_String@a+1
  1457     00E3  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1458                           
  1459                           ;Prelab3_Master.c: 136:     Lcd_Write_String(pot1_s);
  1460     00E8  3027               	movlw	(low (_pot1_s| 0))& (0+255)
  1461     00E9  00F7               	movwf	Lcd_Write_String@a
  1462     00EA  3000               	movlw	0
  1463     00EB  00F8               	movwf	Lcd_Write_String@a+1
  1464     00EC  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1465     00F1                     l1368:
  1466                           
  1467                           ;Prelab3_Master.c: 138:     Lcd_Set_Cursor(1,11);
  1468     00F1  300B               	movlw	11
  1469     00F2  00F6               	movwf	Lcd_Set_Cursor@b
  1470     00F3  3001               	movlw	1
  1471     00F4  120A  118A  2275  120A  118A  	fcall	_Lcd_Set_Cursor
  1472     00F9                     l1370:
  1473                           
  1474                           ;Prelab3_Master.c: 139:     Lcd_Write_String("C: ");
  1475     00F9  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1476     00FA  00F7               	movwf	Lcd_Write_String@a
  1477     00FB  3080               	movlw	128
  1478     00FC  00F8               	movwf	Lcd_Write_String@a+1
  1479     00FD  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1480     0102                     l1372:
  1481                           
  1482                           ;Prelab3_Master.c: 140:     Lcd_Write_String(count_s);
  1483     0102  3023               	movlw	(low (_count_s| 0))& (0+255)
  1484     0103  00F7               	movwf	Lcd_Write_String@a
  1485     0104  3000               	movlw	0
  1486     0105  00F8               	movwf	Lcd_Write_String@a+1
  1487     0106  120A  118A  22C1  120A  118A  	fcall	_Lcd_Write_String
  1488     010B                     l112:
  1489     010B  0008               	return
  1490     010C                     __end_of_outputValues:
  1491                           
  1492                           	psect	text9
  1493     0026                     __ptext9:	
  1494 ;; *************** function _separar_digitos8 *****************
  1495 ;; Defined at:
  1496 ;;		line 144 in file "Prelab3_Master.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  num             1    wreg     unsigned char 
  1499 ;;  dig8            1    0[BANK0 ] PTR unsigned char 
  1500 ;;		 -> count_s(4), pot1_s(4), pot0_s(4), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  num             1    7[BANK0 ] unsigned char 
  1503 ;;  div1            1    8[BANK0 ] unsigned char 
  1504 ;;  unidades        1    6[BANK0 ] unsigned char 
  1505 ;;  decenas         1    5[BANK0 ] unsigned char 
  1506 ;;  centenas        1    4[BANK0 ] unsigned char 
  1507 ;;  div2            1    3[BANK0 ] unsigned char 
  1508 ;;  div3            1    0        unsigned char 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       1       0       0       0
  1519 ;;      Locals:         0       6       0       0       0
  1520 ;;      Temps:          0       2       0       0       0
  1521 ;;      Totals:         0       9       0       0       0
  1522 ;;Total ram usage:        9 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 2
  1525 ;; This function calls:
  1526 ;;		___awdiv
  1527 ;;		___awmod
  1528 ;; This function is called by:
  1529 ;;		_outputValues
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533     0026                     _separar_digitos8:	
  1534                           ;psect for function _separar_digitos8
  1535                           
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1539                           ;separar_digitos8@num stored from wreg
  1540     0026  1283               	bcf	3,5	;RP0=0, select bank0
  1541     0027  1303               	bcf	3,6	;RP1=0, select bank0
  1542     0028  00B6               	movwf	separar_digitos8@num
  1543     0029                     l1310:
  1544                           
  1545                           ;Prelab3_Master.c: 145:     uint8_t div1,div2,div3,centenas,decenas,unidades;;Prelab3_Ma
      +                          ster.c: 146:     div1 = num / 10;
  1546     0029  300A               	movlw	10
  1547     002A  00F2               	movwf	___awdiv@divisor
  1548     002B  3000               	movlw	0
  1549     002C  00F3               	movwf	___awdiv@divisor+1
  1550     002D  0836               	movf	separar_digitos8@num,w
  1551     002E  00B0               	movwf	??_separar_digitos8
  1552     002F  01B1               	clrf	??_separar_digitos8+1
  1553     0030  0830               	movf	??_separar_digitos8,w
  1554     0031  00F4               	movwf	___awdiv@dividend
  1555     0032  0831               	movf	??_separar_digitos8+1,w
  1556     0033  00F5               	movwf	___awdiv@dividend+1
  1557     0034  120A  118A  210C  120A  118A  	fcall	___awdiv
  1558     0039  0872               	movf	?___awdiv,w
  1559     003A  1283               	bcf	3,5	;RP0=0, select bank0
  1560     003B  1303               	bcf	3,6	;RP1=0, select bank0
  1561     003C  00B7               	movwf	separar_digitos8@div1
  1562                           
  1563                           ;Prelab3_Master.c: 147:     unidades = num % 10;
  1564     003D  300A               	movlw	10
  1565     003E  00F2               	movwf	___awmod@divisor
  1566     003F  3000               	movlw	0
  1567     0040  00F3               	movwf	___awmod@divisor+1
  1568     0041  0836               	movf	separar_digitos8@num,w
  1569     0042  00B0               	movwf	??_separar_digitos8
  1570     0043  01B1               	clrf	??_separar_digitos8+1
  1571     0044  0830               	movf	??_separar_digitos8,w
  1572     0045  00F4               	movwf	___awmod@dividend
  1573     0046  0831               	movf	??_separar_digitos8+1,w
  1574     0047  00F5               	movwf	___awmod@dividend+1
  1575     0048  120A  118A  21D0  120A  118A  	fcall	___awmod
  1576     004D  0872               	movf	?___awmod,w
  1577     004E  1283               	bcf	3,5	;RP0=0, select bank0
  1578     004F  1303               	bcf	3,6	;RP1=0, select bank0
  1579     0050  00B5               	movwf	separar_digitos8@unidades
  1580                           
  1581                           ;Prelab3_Master.c: 148:     div2 = div1 / 10;
  1582     0051  300A               	movlw	10
  1583     0052  00F2               	movwf	___awdiv@divisor
  1584     0053  3000               	movlw	0
  1585     0054  00F3               	movwf	___awdiv@divisor+1
  1586     0055  0837               	movf	separar_digitos8@div1,w
  1587     0056  00B0               	movwf	??_separar_digitos8
  1588     0057  01B1               	clrf	??_separar_digitos8+1
  1589     0058  0830               	movf	??_separar_digitos8,w
  1590     0059  00F4               	movwf	___awdiv@dividend
  1591     005A  0831               	movf	??_separar_digitos8+1,w
  1592     005B  00F5               	movwf	___awdiv@dividend+1
  1593     005C  120A  118A  210C  120A  118A  	fcall	___awdiv
  1594     0061  0872               	movf	?___awdiv,w
  1595     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1596     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0064  00B2               	movwf	separar_digitos8@div2
  1598                           
  1599                           ;Prelab3_Master.c: 149:     decenas = div1 % 10;
  1600     0065  300A               	movlw	10
  1601     0066  00F2               	movwf	___awmod@divisor
  1602     0067  3000               	movlw	0
  1603     0068  00F3               	movwf	___awmod@divisor+1
  1604     0069  0837               	movf	separar_digitos8@div1,w
  1605     006A  00B0               	movwf	??_separar_digitos8
  1606     006B  01B1               	clrf	??_separar_digitos8+1
  1607     006C  0830               	movf	??_separar_digitos8,w
  1608     006D  00F4               	movwf	___awmod@dividend
  1609     006E  0831               	movf	??_separar_digitos8+1,w
  1610     006F  00F5               	movwf	___awmod@dividend+1
  1611     0070  120A  118A  21D0  120A  118A  	fcall	___awmod
  1612     0075  0872               	movf	?___awmod,w
  1613     0076  1283               	bcf	3,5	;RP0=0, select bank0
  1614     0077  1303               	bcf	3,6	;RP1=0, select bank0
  1615     0078  00B4               	movwf	separar_digitos8@decenas
  1616                           
  1617                           ;Prelab3_Master.c: 150:     centenas = div2 % 10;
  1618     0079  300A               	movlw	10
  1619     007A  00F2               	movwf	___awmod@divisor
  1620     007B  3000               	movlw	0
  1621     007C  00F3               	movwf	___awmod@divisor+1
  1622     007D  0832               	movf	separar_digitos8@div2,w
  1623     007E  00B0               	movwf	??_separar_digitos8
  1624     007F  01B1               	clrf	??_separar_digitos8+1
  1625     0080  0830               	movf	??_separar_digitos8,w
  1626     0081  00F4               	movwf	___awmod@dividend
  1627     0082  0831               	movf	??_separar_digitos8+1,w
  1628     0083  00F5               	movwf	___awmod@dividend+1
  1629     0084  120A  118A  21D0  120A  118A  	fcall	___awmod
  1630     0089  0872               	movf	?___awmod,w
  1631     008A  1283               	bcf	3,5	;RP0=0, select bank0
  1632     008B  1303               	bcf	3,6	;RP1=0, select bank0
  1633     008C  00B3               	movwf	separar_digitos8@centenas
  1634     008D                     l1312:
  1635                           
  1636                           ;Prelab3_Master.c: 152:     dig8[2] = unidades + 0x30;
  1637     008D  082F               	movf	separar_digitos8@dig8,w
  1638     008E  3E02               	addlw	2
  1639     008F  0084               	movwf	4
  1640     0090  0835               	movf	separar_digitos8@unidades,w
  1641     0091  3E30               	addlw	48
  1642     0092  1383               	bcf	3,7	;select IRP bank0
  1643     0093  0080               	movwf	0
  1644     0094                     l1314:
  1645                           
  1646                           ;Prelab3_Master.c: 153:     dig8[1] = decenas + 0x30;
  1647     0094  0A2F               	incf	separar_digitos8@dig8,w
  1648     0095  0084               	movwf	4
  1649     0096  0834               	movf	separar_digitos8@decenas,w
  1650     0097  3E30               	addlw	48
  1651     0098  0080               	movwf	0
  1652     0099                     l1316:
  1653                           
  1654                           ;Prelab3_Master.c: 154:     dig8[0] = centenas + 0x30;
  1655     0099  082F               	movf	separar_digitos8@dig8,w
  1656     009A  0084               	movwf	4
  1657     009B  0833               	movf	separar_digitos8@centenas,w
  1658     009C  3E30               	addlw	48
  1659     009D  0080               	movwf	0
  1660     009E                     l115:
  1661     009E  0008               	return
  1662     009F                     __end_of_separar_digitos8:
  1663                           
  1664                           	psect	text10
  1665     01D0                     __ptext10:	
  1666 ;; *************** function ___awmod *****************
  1667 ;; Defined at:
  1668 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  divisor         2    2[COMMON] int 
  1671 ;;  dividend        2    4[COMMON] int 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  sign            1    7[COMMON] unsigned char 
  1674 ;;  counter         1    6[COMMON] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2    2[COMMON] int 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0, btemp+1
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         4       0       0       0       0
  1685 ;;      Locals:         2       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0
  1687 ;;      Totals:         6       0       0       0       0
  1688 ;;Total ram usage:        6 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_separar_digitos8
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698     01D0                     ___awmod:	
  1699                           ;psect for function ___awmod
  1700                           
  1701     01D0                     l1100:	
  1702                           ;incstack = 0
  1703                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1704                           
  1705     01D0  01F7               	clrf	___awmod@sign
  1706     01D1                     l1102:
  1707     01D1  1FF5               	btfss	___awmod@dividend+1,7
  1708     01D2  29D4               	goto	u511
  1709     01D3  29D5               	goto	u510
  1710     01D4                     u511:
  1711     01D4  29DC               	goto	l1108
  1712     01D5                     u510:
  1713     01D5                     l1104:
  1714     01D5  09F4               	comf	___awmod@dividend,f
  1715     01D6  09F5               	comf	___awmod@dividend+1,f
  1716     01D7  0AF4               	incf	___awmod@dividend,f
  1717     01D8  1903               	skipnz
  1718     01D9  0AF5               	incf	___awmod@dividend+1,f
  1719     01DA                     l1106:
  1720     01DA  01F7               	clrf	___awmod@sign
  1721     01DB  0AF7               	incf	___awmod@sign,f
  1722     01DC                     l1108:
  1723     01DC  1FF3               	btfss	___awmod@divisor+1,7
  1724     01DD  29DF               	goto	u521
  1725     01DE  29E0               	goto	u520
  1726     01DF                     u521:
  1727     01DF  29E5               	goto	l1112
  1728     01E0                     u520:
  1729     01E0                     l1110:
  1730     01E0  09F2               	comf	___awmod@divisor,f
  1731     01E1  09F3               	comf	___awmod@divisor+1,f
  1732     01E2  0AF2               	incf	___awmod@divisor,f
  1733     01E3  1903               	skipnz
  1734     01E4  0AF3               	incf	___awmod@divisor+1,f
  1735     01E5                     l1112:
  1736     01E5  0872               	movf	___awmod@divisor,w
  1737     01E6  0473               	iorwf	___awmod@divisor+1,w
  1738     01E7  1903               	btfsc	3,2
  1739     01E8  29EA               	goto	u531
  1740     01E9  29EB               	goto	u530
  1741     01EA                     u531:
  1742     01EA  2A1A               	goto	l1130
  1743     01EB                     u530:
  1744     01EB                     l1114:
  1745     01EB  01F6               	clrf	___awmod@counter
  1746     01EC  0AF6               	incf	___awmod@counter,f
  1747     01ED  29F9               	goto	l1120
  1748     01EE                     l1116:
  1749     01EE  3001               	movlw	1
  1750     01EF                     u545:
  1751     01EF  1003               	clrc
  1752     01F0  0DF2               	rlf	___awmod@divisor,f
  1753     01F1  0DF3               	rlf	___awmod@divisor+1,f
  1754     01F2  3EFF               	addlw	-1
  1755     01F3  1D03               	skipz
  1756     01F4  29EF               	goto	u545
  1757     01F5                     l1118:
  1758     01F5  3001               	movlw	1
  1759     01F6  00FF               	movwf	btemp+1
  1760     01F7  087F               	movf	btemp+1,w
  1761     01F8  07F6               	addwf	___awmod@counter,f
  1762     01F9                     l1120:
  1763     01F9  1FF3               	btfss	___awmod@divisor+1,7
  1764     01FA  29FC               	goto	u551
  1765     01FB  29FD               	goto	u550
  1766     01FC                     u551:
  1767     01FC  29EE               	goto	l1116
  1768     01FD                     u550:
  1769     01FD                     l1122:
  1770     01FD  0873               	movf	___awmod@divisor+1,w
  1771     01FE  0275               	subwf	___awmod@dividend+1,w
  1772     01FF  1D03               	skipz
  1773     0200  2A03               	goto	u565
  1774     0201  0872               	movf	___awmod@divisor,w
  1775     0202  0274               	subwf	___awmod@dividend,w
  1776     0203                     u565:
  1777     0203  1C03               	skipc
  1778     0204  2A06               	goto	u561
  1779     0205  2A07               	goto	u560
  1780     0206                     u561:
  1781     0206  2A0D               	goto	l1126
  1782     0207                     u560:
  1783     0207                     l1124:
  1784     0207  0872               	movf	___awmod@divisor,w
  1785     0208  02F4               	subwf	___awmod@dividend,f
  1786     0209  0873               	movf	___awmod@divisor+1,w
  1787     020A  1C03               	skipc
  1788     020B  03F5               	decf	___awmod@dividend+1,f
  1789     020C  02F5               	subwf	___awmod@dividend+1,f
  1790     020D                     l1126:
  1791     020D  3001               	movlw	1
  1792     020E                     u575:
  1793     020E  1003               	clrc
  1794     020F  0CF3               	rrf	___awmod@divisor+1,f
  1795     0210  0CF2               	rrf	___awmod@divisor,f
  1796     0211  3EFF               	addlw	-1
  1797     0212  1D03               	skipz
  1798     0213  2A0E               	goto	u575
  1799     0214                     l1128:
  1800     0214  3001               	movlw	1
  1801     0215  02F6               	subwf	___awmod@counter,f
  1802     0216  1D03               	btfss	3,2
  1803     0217  2A19               	goto	u581
  1804     0218  2A1A               	goto	u580
  1805     0219                     u581:
  1806     0219  29FD               	goto	l1122
  1807     021A                     u580:
  1808     021A                     l1130:
  1809     021A  0877               	movf	___awmod@sign,w
  1810     021B  1903               	btfsc	3,2
  1811     021C  2A1E               	goto	u591
  1812     021D  2A1F               	goto	u590
  1813     021E                     u591:
  1814     021E  2A24               	goto	l1134
  1815     021F                     u590:
  1816     021F                     l1132:
  1817     021F  09F4               	comf	___awmod@dividend,f
  1818     0220  09F5               	comf	___awmod@dividend+1,f
  1819     0221  0AF4               	incf	___awmod@dividend,f
  1820     0222  1903               	skipnz
  1821     0223  0AF5               	incf	___awmod@dividend+1,f
  1822     0224                     l1134:
  1823     0224  0875               	movf	___awmod@dividend+1,w
  1824     0225  00F3               	movwf	?___awmod+1
  1825     0226  0874               	movf	___awmod@dividend,w
  1826     0227  00F2               	movwf	?___awmod
  1827     0228                     l422:
  1828     0228  0008               	return
  1829     0229                     __end_of___awmod:
  1830                           
  1831                           	psect	text11
  1832     010C                     __ptext11:	
  1833 ;; *************** function ___awdiv *****************
  1834 ;; Defined at:
  1835 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  divisor         2    2[COMMON] int 
  1838 ;;  dividend        2    4[COMMON] int 
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;  quotient        2    8[COMMON] int 
  1841 ;;  sign            1    7[COMMON] unsigned char 
  1842 ;;  counter         1    6[COMMON] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    2[COMMON] int 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, btemp+1
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         4       0       0       0       0
  1853 ;;      Locals:         4       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0
  1855 ;;      Totals:         8       0       0       0       0
  1856 ;;Total ram usage:        8 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_separar_digitos8
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866     010C                     ___awdiv:	
  1867                           ;psect for function ___awdiv
  1868                           
  1869     010C                     l1056:	
  1870                           ;incstack = 0
  1871                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1872                           
  1873     010C  01F7               	clrf	___awdiv@sign
  1874     010D                     l1058:
  1875     010D  1FF3               	btfss	___awdiv@divisor+1,7
  1876     010E  2910               	goto	u411
  1877     010F  2911               	goto	u410
  1878     0110                     u411:
  1879     0110  2918               	goto	l1064
  1880     0111                     u410:
  1881     0111                     l1060:
  1882     0111  09F2               	comf	___awdiv@divisor,f
  1883     0112  09F3               	comf	___awdiv@divisor+1,f
  1884     0113  0AF2               	incf	___awdiv@divisor,f
  1885     0114  1903               	skipnz
  1886     0115  0AF3               	incf	___awdiv@divisor+1,f
  1887     0116                     l1062:
  1888     0116  01F7               	clrf	___awdiv@sign
  1889     0117  0AF7               	incf	___awdiv@sign,f
  1890     0118                     l1064:
  1891     0118  1FF5               	btfss	___awdiv@dividend+1,7
  1892     0119  291B               	goto	u421
  1893     011A  291C               	goto	u420
  1894     011B                     u421:
  1895     011B  2925               	goto	l1070
  1896     011C                     u420:
  1897     011C                     l1066:
  1898     011C  09F4               	comf	___awdiv@dividend,f
  1899     011D  09F5               	comf	___awdiv@dividend+1,f
  1900     011E  0AF4               	incf	___awdiv@dividend,f
  1901     011F  1903               	skipnz
  1902     0120  0AF5               	incf	___awdiv@dividend+1,f
  1903     0121                     l1068:
  1904     0121  3001               	movlw	1
  1905     0122  00FF               	movwf	btemp+1
  1906     0123  087F               	movf	btemp+1,w
  1907     0124  06F7               	xorwf	___awdiv@sign,f
  1908     0125                     l1070:
  1909     0125  01F8               	clrf	___awdiv@quotient
  1910     0126  01F9               	clrf	___awdiv@quotient+1
  1911     0127                     l1072:
  1912     0127  0872               	movf	___awdiv@divisor,w
  1913     0128  0473               	iorwf	___awdiv@divisor+1,w
  1914     0129  1903               	btfsc	3,2
  1915     012A  292C               	goto	u431
  1916     012B  292D               	goto	u430
  1917     012C                     u431:
  1918     012C  2964               	goto	l1092
  1919     012D                     u430:
  1920     012D                     l1074:
  1921     012D  01F6               	clrf	___awdiv@counter
  1922     012E  0AF6               	incf	___awdiv@counter,f
  1923     012F  293B               	goto	l1080
  1924     0130                     l1076:
  1925     0130  3001               	movlw	1
  1926     0131                     u445:
  1927     0131  1003               	clrc
  1928     0132  0DF2               	rlf	___awdiv@divisor,f
  1929     0133  0DF3               	rlf	___awdiv@divisor+1,f
  1930     0134  3EFF               	addlw	-1
  1931     0135  1D03               	skipz
  1932     0136  2931               	goto	u445
  1933     0137                     l1078:
  1934     0137  3001               	movlw	1
  1935     0138  00FF               	movwf	btemp+1
  1936     0139  087F               	movf	btemp+1,w
  1937     013A  07F6               	addwf	___awdiv@counter,f
  1938     013B                     l1080:
  1939     013B  1FF3               	btfss	___awdiv@divisor+1,7
  1940     013C  293E               	goto	u451
  1941     013D  293F               	goto	u450
  1942     013E                     u451:
  1943     013E  2930               	goto	l1076
  1944     013F                     u450:
  1945     013F                     l1082:
  1946     013F  3001               	movlw	1
  1947     0140                     u465:
  1948     0140  1003               	clrc
  1949     0141  0DF8               	rlf	___awdiv@quotient,f
  1950     0142  0DF9               	rlf	___awdiv@quotient+1,f
  1951     0143  3EFF               	addlw	-1
  1952     0144  1D03               	skipz
  1953     0145  2940               	goto	u465
  1954     0146  0873               	movf	___awdiv@divisor+1,w
  1955     0147  0275               	subwf	___awdiv@dividend+1,w
  1956     0148  1D03               	skipz
  1957     0149  294C               	goto	u475
  1958     014A  0872               	movf	___awdiv@divisor,w
  1959     014B  0274               	subwf	___awdiv@dividend,w
  1960     014C                     u475:
  1961     014C  1C03               	skipc
  1962     014D  294F               	goto	u471
  1963     014E  2950               	goto	u470
  1964     014F                     u471:
  1965     014F  2957               	goto	l1088
  1966     0150                     u470:
  1967     0150                     l1084:
  1968     0150  0872               	movf	___awdiv@divisor,w
  1969     0151  02F4               	subwf	___awdiv@dividend,f
  1970     0152  0873               	movf	___awdiv@divisor+1,w
  1971     0153  1C03               	skipc
  1972     0154  03F5               	decf	___awdiv@dividend+1,f
  1973     0155  02F5               	subwf	___awdiv@dividend+1,f
  1974     0156                     l1086:
  1975     0156  1478               	bsf	___awdiv@quotient,0
  1976     0157                     l1088:
  1977     0157  3001               	movlw	1
  1978     0158                     u485:
  1979     0158  1003               	clrc
  1980     0159  0CF3               	rrf	___awdiv@divisor+1,f
  1981     015A  0CF2               	rrf	___awdiv@divisor,f
  1982     015B  3EFF               	addlw	-1
  1983     015C  1D03               	skipz
  1984     015D  2958               	goto	u485
  1985     015E                     l1090:
  1986     015E  3001               	movlw	1
  1987     015F  02F6               	subwf	___awdiv@counter,f
  1988     0160  1D03               	btfss	3,2
  1989     0161  2963               	goto	u491
  1990     0162  2964               	goto	u490
  1991     0163                     u491:
  1992     0163  293F               	goto	l1082
  1993     0164                     u490:
  1994     0164                     l1092:
  1995     0164  0877               	movf	___awdiv@sign,w
  1996     0165  1903               	btfsc	3,2
  1997     0166  2968               	goto	u501
  1998     0167  2969               	goto	u500
  1999     0168                     u501:
  2000     0168  296E               	goto	l1096
  2001     0169                     u500:
  2002     0169                     l1094:
  2003     0169  09F8               	comf	___awdiv@quotient,f
  2004     016A  09F9               	comf	___awdiv@quotient+1,f
  2005     016B  0AF8               	incf	___awdiv@quotient,f
  2006     016C  1903               	skipnz
  2007     016D  0AF9               	incf	___awdiv@quotient+1,f
  2008     016E                     l1096:
  2009     016E  0879               	movf	___awdiv@quotient+1,w
  2010     016F  00F3               	movwf	?___awdiv+1
  2011     0170  0878               	movf	___awdiv@quotient,w
  2012     0171  00F2               	movwf	?___awdiv
  2013     0172                     l409:
  2014     0172  0008               	return
  2015     0173                     __end_of___awdiv:
  2016                           
  2017                           	psect	text12
  2018     02C1                     __ptext12:	
  2019 ;; *************** function _Lcd_Write_String *****************
  2020 ;; Defined at:
  2021 ;;		line 98 in file "LCD.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  a               2    7[COMMON] PTR unsigned char 
  2024 ;;		 -> STR_3(4), STR_2(5), STR_1(5), count_s(4), 
  2025 ;;		 -> pot1_s(4), pot0_s(4), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  i               2    3[BANK0 ] int 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         2       0       0       0       0
  2038 ;;      Locals:         0       2       0       0       0
  2039 ;;      Temps:          0       3       0       0       0
  2040 ;;      Totals:         2       5       0       0       0
  2041 ;;Total ram usage:        7 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 3
  2044 ;; This function calls:
  2045 ;;		_Lcd_Write_Char
  2046 ;; This function is called by:
  2047 ;;		_outputValues
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051     02C1                     _Lcd_Write_String:	
  2052                           ;psect for function _Lcd_Write_String
  2053                           
  2054     02C1                     l1338:	
  2055                           ;incstack = 0
  2056                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2057                           
  2058                           
  2059                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2060     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2061     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2062     02C3  01B2               	clrf	Lcd_Write_String@i
  2063     02C4  01B3               	clrf	Lcd_Write_String@i+1
  2064     02C5  2AEA               	goto	l1344
  2065     02C6                     l1340:
  2066                           
  2067                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2068     02C6  0832               	movf	Lcd_Write_String@i,w
  2069     02C7  0777               	addwf	Lcd_Write_String@a,w
  2070     02C8  00B0               	movwf	??_Lcd_Write_String+1
  2071     02C9  0878               	movf	Lcd_Write_String@a+1,w
  2072     02CA  00AF               	movwf	??_Lcd_Write_String
  2073     02CB  1803               	skipnc
  2074     02CC  0AAF               	incf	??_Lcd_Write_String,f
  2075     02CD  1FB2               	btfss	Lcd_Write_String@i,7
  2076     02CE  2AD0               	goto	u780
  2077     02CF  03AF               	decf	??_Lcd_Write_String,f
  2078     02D0                     u780:
  2079     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2080     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2081     02D2  082F               	movf	??_Lcd_Write_String,w
  2082     02D3  00B1               	movwf	??_Lcd_Write_String+2
  2083     02D4  0831               	movf	??_Lcd_Write_String+2,w
  2084     02D5  00FF               	movwf	btemp+1
  2085     02D6  0830               	movf	??_Lcd_Write_String+1,w
  2086     02D7  0084               	movwf	4
  2087     02D8  120A  118A  2380  120A  118A  	fcall	stringtab
  2088     02DD  120A  118A  2307  120A  118A  	fcall	_Lcd_Write_Char
  2089     02E2                     l1342:
  2090     02E2  3001               	movlw	1
  2091     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2092     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2093     02E5  07B2               	addwf	Lcd_Write_String@i,f
  2094     02E6  1803               	skipnc
  2095     02E7  0AB3               	incf	Lcd_Write_String@i+1,f
  2096     02E8  3000               	movlw	0
  2097     02E9  07B3               	addwf	Lcd_Write_String@i+1,f
  2098     02EA                     l1344:
  2099     02EA  0832               	movf	Lcd_Write_String@i,w
  2100     02EB  0777               	addwf	Lcd_Write_String@a,w
  2101     02EC  00B0               	movwf	??_Lcd_Write_String+1
  2102     02ED  0878               	movf	Lcd_Write_String@a+1,w
  2103     02EE  00AF               	movwf	??_Lcd_Write_String
  2104     02EF  1803               	skipnc
  2105     02F0  0AAF               	incf	??_Lcd_Write_String,f
  2106     02F1  1FB2               	btfss	Lcd_Write_String@i,7
  2107     02F2  2AF4               	goto	u790
  2108     02F3  03AF               	decf	??_Lcd_Write_String,f
  2109     02F4                     u790:
  2110     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2111     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2112     02F6  082F               	movf	??_Lcd_Write_String,w
  2113     02F7  00B1               	movwf	??_Lcd_Write_String+2
  2114     02F8  0831               	movf	??_Lcd_Write_String+2,w
  2115     02F9  00FF               	movwf	btemp+1
  2116     02FA  0830               	movf	??_Lcd_Write_String+1,w
  2117     02FB  0084               	movwf	4
  2118     02FC  120A  118A  2380  120A  118A  	fcall	stringtab
  2119     0301  3A00               	xorlw	0
  2120     0302  1D03               	skipz
  2121     0303  2B05               	goto	u801
  2122     0304  2B06               	goto	u800
  2123     0305                     u801:
  2124     0305  2AC6               	goto	l1340
  2125     0306                     u800:
  2126     0306                     l164:
  2127     0306  0008               	return
  2128     0307                     __end_of_Lcd_Write_String:
  2129                           
  2130                           	psect	text13
  2131     0307                     __ptext13:	
  2132 ;; *************** function _Lcd_Write_Char *****************
  2133 ;; Defined at:
  2134 ;;		line 83 in file "LCD.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  a               1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  a               1    6[COMMON] unsigned char 
  2139 ;;  y               1    5[COMMON] unsigned char 
  2140 ;;  temp            1    4[COMMON] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         0       0       0       0       0
  2151 ;;      Locals:         3       0       0       0       0
  2152 ;;      Temps:          1       0       0       0       0
  2153 ;;      Totals:         4       0       0       0       0
  2154 ;;Total ram usage:        4 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 2
  2157 ;; This function calls:
  2158 ;;		_Lcd_Port
  2159 ;; This function is called by:
  2160 ;;		_Lcd_Write_String
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164     0307                     _Lcd_Write_Char:	
  2165                           ;psect for function _Lcd_Write_Char
  2166                           
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2170                           ;Lcd_Write_Char@a stored from wreg
  2171     0307  00F6               	movwf	Lcd_Write_Char@a
  2172     0308                     l1280:
  2173                           
  2174                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2175     0308  0876               	movf	Lcd_Write_Char@a,w
  2176     0309  390F               	andlw	15
  2177     030A  00F4               	movwf	Lcd_Write_Char@temp
  2178                           
  2179                           ;LCD.c: 86:     y = a & 0xF0;
  2180     030B  0876               	movf	Lcd_Write_Char@a,w
  2181     030C  39F0               	andlw	240
  2182     030D  00F5               	movwf	Lcd_Write_Char@y
  2183     030E                     l1282:
  2184                           
  2185                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2186     030E  1283               	bcf	3,5	;RP0=0, select bank0
  2187     030F  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0310  1508               	bsf	8,2	;volatile
  2189     0311                     l1284:
  2190                           
  2191                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2192     0311  0875               	movf	Lcd_Write_Char@y,w
  2193     0312  00F3               	movwf	??_Lcd_Write_Char
  2194     0313  3004               	movlw	4
  2195     0314                     u735:
  2196     0314  1003               	clrc
  2197     0315  0CF3               	rrf	??_Lcd_Write_Char,f
  2198     0316  3EFF               	addlw	-1
  2199     0317  1D03               	skipz
  2200     0318  2B14               	goto	u735
  2201     0319  0873               	movf	??_Lcd_Write_Char,w
  2202     031A  120A  118A  235E  120A  118A  	fcall	_Lcd_Port
  2203     031F                     l1286:
  2204                           
  2205                           ;LCD.c: 89:     RD3 = 1;
  2206     031F  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0320  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0321  1588               	bsf	8,3	;volatile
  2209     0322                     l1288:
  2210                           
  2211                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2212     0322  301A               	movlw	26
  2213     0323  00F3               	movwf	??_Lcd_Write_Char
  2214     0324                     u867:
  2215     0324  0BF3               	decfsz	??_Lcd_Write_Char,f
  2216     0325  2B24               	goto	u867
  2217     0326  0000               	nop
  2218     0327                     l1290:
  2219                           
  2220                           ;LCD.c: 91:     RD3 = 0;
  2221     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0329  1188               	bcf	8,3	;volatile
  2224     032A                     l1292:
  2225                           
  2226                           ;LCD.c: 92:     Lcd_Port(temp);
  2227     032A  0874               	movf	Lcd_Write_Char@temp,w
  2228     032B  120A  118A  235E  120A  118A  	fcall	_Lcd_Port
  2229     0330                     l1294:
  2230                           
  2231                           ;LCD.c: 93:     RD3 = 1;
  2232     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2234     0332  1588               	bsf	8,3	;volatile
  2235     0333                     l1296:
  2236                           
  2237                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2238     0333  301A               	movlw	26
  2239     0334  00F3               	movwf	??_Lcd_Write_Char
  2240     0335                     u877:
  2241     0335  0BF3               	decfsz	??_Lcd_Write_Char,f
  2242     0336  2B35               	goto	u877
  2243     0337  0000               	nop
  2244     0338                     l1298:
  2245                           
  2246                           ;LCD.c: 95:     RD3 = 0;
  2247     0338  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0339  1303               	bcf	3,6	;RP1=0, select bank0
  2249     033A  1188               	bcf	8,3	;volatile
  2250     033B                     l158:
  2251     033B  0008               	return
  2252     033C                     __end_of_Lcd_Write_Char:
  2253                           
  2254                           	psect	text14
  2255     0275                     __ptext14:	
  2256 ;; *************** function _Lcd_Set_Cursor *****************
  2257 ;; Defined at:
  2258 ;;		line 48 in file "LCD.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  a               1    wreg     unsigned char 
  2261 ;;  b               1    6[COMMON] unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  a               1    0[BANK0 ] unsigned char 
  2264 ;;  temp            1    3[BANK0 ] unsigned char 
  2265 ;;  y               1    2[BANK0 ] unsigned char 
  2266 ;;  z               1    1[BANK0 ] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         1       0       0       0       0
  2277 ;;      Locals:         0       4       0       0       0
  2278 ;;      Temps:          1       0       0       0       0
  2279 ;;      Totals:         2       4       0       0       0
  2280 ;;Total ram usage:        6 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 3
  2283 ;; This function calls:
  2284 ;;		_Lcd_Cmd
  2285 ;; This function is called by:
  2286 ;;		_outputValues
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290     0275                     _Lcd_Set_Cursor:	
  2291                           ;psect for function _Lcd_Set_Cursor
  2292                           
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2296                           ;Lcd_Set_Cursor@a stored from wreg
  2297     0275  1283               	bcf	3,5	;RP0=0, select bank0
  2298     0276  1303               	bcf	3,6	;RP1=0, select bank0
  2299     0277  00AF               	movwf	Lcd_Set_Cursor@a
  2300     0278                     l1318:
  2301                           
  2302                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2303     0278  032F               	decf	Lcd_Set_Cursor@a,w
  2304     0279  1D03               	btfss	3,2
  2305     027A  2A7C               	goto	u741
  2306     027B  2A7D               	goto	u740
  2307     027C                     u741:
  2308     027C  2A9C               	goto	l1328
  2309     027D                     u740:
  2310     027D                     l1320:
  2311                           
  2312                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2313     027D  0876               	movf	Lcd_Set_Cursor@b,w
  2314     027E  3E7F               	addlw	127
  2315     027F  00B2               	movwf	Lcd_Set_Cursor@temp
  2316                           
  2317                           ;LCD.c: 52:         z = temp >> 4;
  2318     0280  0832               	movf	Lcd_Set_Cursor@temp,w
  2319     0281  00F7               	movwf	??_Lcd_Set_Cursor
  2320     0282  3004               	movlw	4
  2321     0283                     u755:
  2322     0283  1003               	clrc
  2323     0284  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2324     0285  3EFF               	addlw	-1
  2325     0286  1D03               	skipz
  2326     0287  2A83               	goto	u755
  2327     0288  0877               	movf	??_Lcd_Set_Cursor,w
  2328     0289  00B0               	movwf	Lcd_Set_Cursor@z
  2329     028A                     l1322:
  2330                           
  2331                           ;LCD.c: 53:         y = temp & 0x0F;
  2332     028A  0832               	movf	Lcd_Set_Cursor@temp,w
  2333     028B  390F               	andlw	15
  2334     028C  00B1               	movwf	Lcd_Set_Cursor@y
  2335     028D                     l1324:
  2336                           
  2337                           ;LCD.c: 54:         Lcd_Cmd(z);
  2338     028D  0830               	movf	Lcd_Set_Cursor@z,w
  2339     028E  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2340     0293                     l1326:
  2341                           
  2342                           ;LCD.c: 55:         Lcd_Cmd(y);
  2343     0293  1283               	bcf	3,5	;RP0=0, select bank0
  2344     0294  1303               	bcf	3,6	;RP1=0, select bank0
  2345     0295  0831               	movf	Lcd_Set_Cursor@y,w
  2346     0296  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2347                           
  2348                           ;LCD.c: 56:     } else if (a == 2) {
  2349     029B  2AC0               	goto	l152
  2350     029C                     l1328:
  2351     029C  3002               	movlw	2
  2352     029D  062F               	xorwf	Lcd_Set_Cursor@a,w
  2353     029E  1D03               	btfss	3,2
  2354     029F  2AA1               	goto	u761
  2355     02A0  2AA2               	goto	u760
  2356     02A1                     u761:
  2357     02A1  2AC0               	goto	l152
  2358     02A2                     u760:
  2359     02A2                     l1330:
  2360                           
  2361                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2362     02A2  0876               	movf	Lcd_Set_Cursor@b,w
  2363     02A3  3EBF               	addlw	191
  2364     02A4  00B2               	movwf	Lcd_Set_Cursor@temp
  2365                           
  2366                           ;LCD.c: 58:         z = temp >> 4;
  2367     02A5  0832               	movf	Lcd_Set_Cursor@temp,w
  2368     02A6  00F7               	movwf	??_Lcd_Set_Cursor
  2369     02A7  3004               	movlw	4
  2370     02A8                     u775:
  2371     02A8  1003               	clrc
  2372     02A9  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2373     02AA  3EFF               	addlw	-1
  2374     02AB  1D03               	skipz
  2375     02AC  2AA8               	goto	u775
  2376     02AD  0877               	movf	??_Lcd_Set_Cursor,w
  2377     02AE  00B0               	movwf	Lcd_Set_Cursor@z
  2378     02AF                     l1332:
  2379                           
  2380                           ;LCD.c: 59:         y = temp & 0x0F;
  2381     02AF  0832               	movf	Lcd_Set_Cursor@temp,w
  2382     02B0  390F               	andlw	15
  2383     02B1  00B1               	movwf	Lcd_Set_Cursor@y
  2384     02B2                     l1334:
  2385                           
  2386                           ;LCD.c: 60:         Lcd_Cmd(z);
  2387     02B2  0830               	movf	Lcd_Set_Cursor@z,w
  2388     02B3  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2389     02B8                     l1336:
  2390                           
  2391                           ;LCD.c: 61:         Lcd_Cmd(y);
  2392     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2393     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2394     02BA  0831               	movf	Lcd_Set_Cursor@y,w
  2395     02BB  120A  118A  239E  120A  118A  	fcall	_Lcd_Cmd
  2396     02C0                     l152:
  2397     02C0  0008               	return
  2398     02C1                     __end_of_Lcd_Set_Cursor:
  2399                           
  2400                           	psect	text15
  2401     039E                     __ptext15:	
  2402 ;; *************** function _Lcd_Cmd *****************
  2403 ;; Defined at:
  2404 ;;		line 35 in file "LCD.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  a               1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  a               1    5[COMMON] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         0       0       0       0       0
  2419 ;;      Locals:         1       0       0       0       0
  2420 ;;      Temps:          2       0       0       0       0
  2421 ;;      Totals:         3       0       0       0       0
  2422 ;;Total ram usage:        3 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 2
  2425 ;; This function calls:
  2426 ;;		_Lcd_Port
  2427 ;; This function is called by:
  2428 ;;		_Lcd_Set_Cursor
  2429 ;;		_Lcd_Init
  2430 ;;		_Lcd_Clear
  2431 ;;		_Lcd_Shift_Right
  2432 ;;		_Lcd_Shift_Left
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436     039E                     _Lcd_Cmd:	
  2437                           ;psect for function _Lcd_Cmd
  2438                           
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2442                           ;Lcd_Cmd@a stored from wreg
  2443     039E  00F5               	movwf	Lcd_Cmd@a
  2444     039F                     l1270:
  2445                           
  2446                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2447     039F  1283               	bcf	3,5	;RP0=0, select bank0
  2448     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2449     03A1  1108               	bcf	8,2	;volatile
  2450     03A2                     l1272:
  2451                           
  2452                           ;LCD.c: 37:     Lcd_Port(a);
  2453     03A2  0875               	movf	Lcd_Cmd@a,w
  2454     03A3  120A  118A  235E  120A  118A  	fcall	_Lcd_Port
  2455     03A8                     l1274:
  2456                           
  2457                           ;LCD.c: 38:     RD3 = 1;
  2458     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2459     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2460     03AA  1588               	bsf	8,3	;volatile
  2461     03AB                     l1276:
  2462                           
  2463                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2464     03AB  300B               	movlw	11
  2465     03AC  00F4               	movwf	??_Lcd_Cmd+1
  2466     03AD  3062               	movlw	98
  2467     03AE  00F3               	movwf	??_Lcd_Cmd
  2468     03AF                     u887:
  2469     03AF  0BF3               	decfsz	??_Lcd_Cmd,f
  2470     03B0  2BAF               	goto	u887
  2471     03B1  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2472     03B2  2BAF               	goto	u887
  2473     03B3  0000               	nop
  2474     03B4                     l1278:
  2475                           
  2476                           ;LCD.c: 40:     RD3 = 0;
  2477     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2478     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2479     03B6  1188               	bcf	8,3	;volatile
  2480     03B7                     l143:
  2481     03B7  0008               	return
  2482     03B8                     __end_of_Lcd_Cmd:
  2483                           
  2484                           	psect	text16
  2485     035E                     __ptext16:	
  2486 ;; *************** function _Lcd_Port *****************
  2487 ;; Defined at:
  2488 ;;		line 13 in file "LCD.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  a               1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  a               1    2[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0
  2505 ;;      Totals:         1       0       0       0       0
  2506 ;;Total ram usage:        1 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_Lcd_Cmd
  2513 ;;		_Lcd_Init
  2514 ;;		_Lcd_Write_Char
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518     035E                     _Lcd_Port:	
  2519                           ;psect for function _Lcd_Port
  2520                           
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _Lcd_Port: [wreg]
  2524                           ;Lcd_Port@a stored from wreg
  2525     035E  00F2               	movwf	Lcd_Port@a
  2526     035F                     l1260:
  2527                           
  2528                           ;LCD.c: 14:     if (a & 1)
  2529     035F  1C72               	btfss	Lcd_Port@a,0
  2530     0360  2B62               	goto	u691
  2531     0361  2B63               	goto	u690
  2532     0362                     u691:
  2533     0362  2B67               	goto	l132
  2534     0363                     u690:
  2535     0363                     l1262:
  2536                           
  2537                           ;LCD.c: 15:         RD4 = 1;
  2538     0363  1283               	bcf	3,5	;RP0=0, select bank0
  2539     0364  1303               	bcf	3,6	;RP1=0, select bank0
  2540     0365  1608               	bsf	8,4	;volatile
  2541     0366  2B6A               	goto	l133
  2542     0367                     l132:	
  2543                           ;LCD.c: 16:     else
  2544                           
  2545                           
  2546                           ;LCD.c: 17:         RD4 = 0;
  2547     0367  1283               	bcf	3,5	;RP0=0, select bank0
  2548     0368  1303               	bcf	3,6	;RP1=0, select bank0
  2549     0369  1208               	bcf	8,4	;volatile
  2550     036A                     l133:
  2551                           
  2552                           ;LCD.c: 19:     if (a & 2)
  2553     036A  1CF2               	btfss	Lcd_Port@a,1
  2554     036B  2B6D               	goto	u701
  2555     036C  2B6E               	goto	u700
  2556     036D                     u701:
  2557     036D  2B70               	goto	l134
  2558     036E                     u700:
  2559     036E                     l1264:
  2560                           
  2561                           ;LCD.c: 20:         RD5 = 1;
  2562     036E  1688               	bsf	8,5	;volatile
  2563     036F  2B71               	goto	l135
  2564     0370                     l134:	
  2565                           ;LCD.c: 21:     else
  2566                           
  2567                           
  2568                           ;LCD.c: 22:         RD5 = 0;
  2569     0370  1288               	bcf	8,5	;volatile
  2570     0371                     l135:
  2571                           
  2572                           ;LCD.c: 24:     if (a & 4)
  2573     0371  1D72               	btfss	Lcd_Port@a,2
  2574     0372  2B74               	goto	u711
  2575     0373  2B75               	goto	u710
  2576     0374                     u711:
  2577     0374  2B77               	goto	l136
  2578     0375                     u710:
  2579     0375                     l1266:
  2580                           
  2581                           ;LCD.c: 25:         RD6 = 1;
  2582     0375  1708               	bsf	8,6	;volatile
  2583     0376  2B78               	goto	l137
  2584     0377                     l136:	
  2585                           ;LCD.c: 26:     else
  2586                           
  2587                           
  2588                           ;LCD.c: 27:         RD6 = 0;
  2589     0377  1308               	bcf	8,6	;volatile
  2590     0378                     l137:
  2591                           
  2592                           ;LCD.c: 29:     if (a & 8)
  2593     0378  1DF2               	btfss	Lcd_Port@a,3
  2594     0379  2B7B               	goto	u721
  2595     037A  2B7C               	goto	u720
  2596     037B                     u721:
  2597     037B  2B7E               	goto	l138
  2598     037C                     u720:
  2599     037C                     l1268:
  2600                           
  2601                           ;LCD.c: 30:         RD7 = 1;
  2602     037C  1788               	bsf	8,7	;volatile
  2603     037D  2B7F               	goto	l140
  2604     037E                     l138:	
  2605                           ;LCD.c: 31:     else
  2606                           
  2607                           
  2608                           ;LCD.c: 32:         RD7 = 0;
  2609     037E  1388               	bcf	8,7	;volatile
  2610     037F                     l140:
  2611     037F  0008               	return
  2612     0380                     __end_of_Lcd_Port:
  2613                           
  2614                           	psect	text17
  2615     03F1                     __ptext17:	
  2616 ;; *************** function _isr *****************
  2617 ;; Defined at:
  2618 ;;		line 53 in file "Prelab3_Master.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		None
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          2       0       0       0       0
  2635 ;;      Totals:         2       0       0       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		Interrupt level 1
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     03F1                     _isr:	
  2646                           ;psect for function _isr
  2647                           
  2648     03F1                     i1l93:
  2649     03F1  0871               	movf	??_isr+1,w
  2650     03F2  008A               	movwf	10
  2651     03F3  0E70               	swapf	??_isr,w
  2652     03F4  0083               	movwf	3
  2653     03F5  0EFE               	swapf	btemp,f
  2654     03F6  0E7E               	swapf	btemp,w
  2655     03F7  0009               	retfie
  2656     03F8                     __end_of_isr:
  2657     007E                     btemp	set	126	;btemp
  2658     007E                     wtemp0	set	126
  2659                           
  2660                           	psect	intentry
  2661     0004                     __pintentry:	
  2662                           ;incstack = 0
  2663                           ; Regs used in _isr: []
  2664                           
  2665     0004                     interrupt_function:
  2666     007E                     saved_w	set	btemp
  2667     0004  00FE               	movwf	btemp
  2668     0005  0E03               	swapf	3,w
  2669     0006  00F0               	movwf	??_isr
  2670     0007  080A               	movf	10,w
  2671     0008  00F1               	movwf	??_isr+1
  2672     0009  120A  118A  2BF1   	ljmp	_isr
  2673                           
  2674                           	psect	config
  2675                           
  2676                           ;Config register CONFIG1 @ 0x2007
  2677                           ;	Oscillator Selection bits
  2678                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2679                           ;	Watchdog Timer Enable bit
  2680                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2681                           ;	Power-up Timer Enable bit
  2682                           ;	PWRTE = OFF, PWRT disabled
  2683                           ;	RE3/MCLR pin function select bit
  2684                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2685                           ;	Code Protection bit
  2686                           ;	CP = OFF, Program memory code protection is disabled
  2687                           ;	Data Code Protection bit
  2688                           ;	CPD = OFF, Data memory code protection is disabled
  2689                           ;	Brown Out Reset Selection bits
  2690                           ;	BOREN = OFF, BOR disabled
  2691                           ;	Internal External Switchover bit
  2692                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2693                           ;	Fail-Safe Clock Monitor Enabled bit
  2694                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2695                           ;	Low Voltage Programming Enable bit
  2696                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2697                           ;	In-Circuit Debugger Mode bit
  2698                           ;	DEBUG = 0x1, unprogrammed default
  2699     2007                     	org	8199
  2700     2007  20D4               	dw	8404
  2701                           
  2702                           ;Config register CONFIG2 @ 0x2008
  2703                           ;	Brown-out Reset Selection bit
  2704                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2705                           ;	Flash Program Memory Self Write Enable bits
  2706                           ;	WRT = OFF, Write protection off
  2707     2008                     	org	8200
  2708     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[5]), count_s(BANK0[4]), 
		 -> pot1_s(BANK0[4]), pot0_s(BANK0[4]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> count_s(BANK0[4]), pot1_s(BANK0[4]), pot0_s(BANK0[4]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _requestValues->_spiWrite
    _separar_digitos8->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _outputValues->_separar_digitos8

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4382
                       _outputValues
                      _requestValues
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     639
                           _Lcd_Init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _requestValues                                        2     2      0      22
                                              3 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (3) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _outputValues                                         0     0      0    3721
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                    10     9      1    1982
                                              0 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     924
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     815
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _outputValues
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _separar_digitos8
       ___awdiv
       ___awmod
   _requestValues
     _spiRead
       _spiReceiveWait
     _spiWrite
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _spiInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 03 17:47:27 2023

separar_digitos8@centenas 0033                         _t 0020                         pc 0002  
             _SSPSTATbits 0094                        l20 03EA                        l23 03F0  
                      l16 03C8                        l17 03CD                        l34 03E9  
                      l26 03FD                        l98 03D3              ___awdiv@sign 0077  
                      fsr 0004                       l112 010B                       l104 035D  
                     l115 009E                       l140 037F                       l132 0367  
                     l133 036A                       l109 0274                       l134 0370  
                     l135 0371                       l143 03B7                       l136 0377  
                     l152 02C0                       l137 0378                       l138 037E  
                     l155 01CF                       l164 0306                       l158 033B  
                     l422 0228                       l409 0172                       _RC0 0038  
                     _RC1 0039                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u410 0111                       u411 0110                       u500 0169  
                     u420 011C                       u501 0168                       u421 011B  
                     u430 012D                       u510 01D5                       u431 012C  
                     u511 01D4                       u520 01E0                       u600 03C0  
                     u521 01DF                       u601 03BF                       u450 013F  
                     u530 01EB                       u451 013E                       u531 01EA  
                     u700 036E                       u701 036D                       u445 0131  
                     u710 0375                       u470 0150                       u550 01FD  
                     u390 03F0                       u711 0374                       u471 014F  
                     u551 01FC                       u391 03EF                       u720 037C  
                     u800 0306                       u560 0207                       u721 037B  
                     u801 0305                       u465 0140                       u561 0206  
                     u545 01EF                       u490 0164                       u491 0163  
                     u475 014C                       u740 027D                       u580 021A  
                     u741 027C                       u485 0158                       u581 0219  
                     u565 0203                       _SCS 0478                       u590 021F  
                     u735 0314                       u591 021E                       u575 020E  
                     u760 02A2                       u680 024C                       u761 02A1  
                     u681 024B                       u817 017D                       u690 0363  
                     u691 0362                       u755 0283                       u827 018C  
                     u780 02D0                       u837 019B                       u790 02F4  
                     u775 02A8                       u847 023D                       u857 026F  
                     u867 0324                       u877 0335                       u887 03AF  
                     _isr 03F1                       fsr0 0004                       indf 0000  
            ___awmod@sign 0077                      l1100 01D0                      l1110 01E0  
                    l1102 01D1                      l1120 01F9                      l1112 01E5  
                    l1104 01D5                      l1024 03EA                      l1122 01FD  
                    l1114 01EB                      l1130 021A                      l1106 01DA  
separar_digitos8@unidades 0035                      l1060 0111                      l1132 021F  
                    l1124 0207                      l1116 01EE                      l1108 01DC  
                    l1220 0242                      l1300 0173                      l1140 03C0  
                    l1070 0125                      l1062 0116                      l1134 0224  
                    l1126 020D                      l1118 01F5                      l1310 0029  
                    l1150 03E1                      l1230 0267                      l1222 0245  
                    l1214 0229                      l1302 0179                      l1142 03C2  
                    l1320 027D                      l1080 013B                      l1072 0127  
                    l1064 0118                      l1056 010C                      l1128 0214  
                    l1312 008D                      l1152 03E6                      l1232 026B  
                    l1224 0246                      l1216 022D                      l1304 0182  
                    l1144 03C4                      l1330 02A2                      l1322 028A  
                    l1090 015E                      l1082 013F                      l1074 012D  
                    l1066 011C                      l1058 010D                      l1314 0094  
                    l1226 024C                      l1218 0239                      l1306 0191  
                    l1146 03C7                      l1138 03B9                      l1260 035F  
                    l1332 02AF                      l1324 028D                      l1340 02C6  
                    l1084 0150                      l1076 0130                      l1092 0164  
                    l1068 0121                      l1316 0099                      l1148 03F9  
                    l1228 0259                      l1308 0197                      l1262 0363  
                    l1270 039F                      l1334 02B2                      l1326 0293  
                    l1318 0278                      l1342 02E2                      l1094 0169  
                    l1086 0156                      l1078 0137                      l1350 034A  
                    l1264 036E                      l1272 03A2                      l1336 02B8  
                    l1328 029C                      l1280 0308                      l1344 02EA  
                    l1096 016E                      l1088 0157                      l1360 00BD  
                    l1352 034B                      l1266 0375                      l1274 03A8  
                    l1290 0327                      l1282 030E                      l1338 02C1  
                    l1370 00F9                      l1362 00C5                      l1354 0350  
                    l1346 033C                      l1268 037C                      l1276 03AB  
                    l1292 032A                      l1284 0311                      l1372 0102  
                    l1364 00CE                      l1356 0354                      l1348 0346  
                    l1278 03B4                      l1294 0330                      l1286 031F  
                    l1366 00D7                      l1358 009F                      l1374 03CE  
                    l1296 0333                      l1288 0322                      l1368 00F1  
                    l1376 03D8                      l1298 0338                      ?_isr 0070  
                    STR_1 0390                      STR_2 0395                      STR_3 039A  
                    i1l93 03F1         ?_Lcd_Write_String 0077                      _main 03CE  
                    _pot0 007B                      _pot1 007A                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 002F           __end_of_Lcd_Cmd 03B8  
                   ??_isr 0070                     ?_main 0070           __end_of___awdiv 0173  
         __end_of___awmod 0229                     _ANSEL 0188           ___awdiv@divisor 0072  
         ___awdiv@counter 0076                     _PORTD 0008                     _TRISC 0087  
                   _TRISD 0088              _outputValues 009F                     _count 0022  
                   _setup 033C         ?_separar_digitos8 002F                     pclath 000A  
         __end_of_spiInit 03CE           __end_of_spiRead 03EA        ??_separar_digitos8 0030  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 01D0  
        __end_of_Lcd_Port 0380           __initialization 000F              __end_of_main 03E1  
                  ??_main 007A          ___awdiv@dividend 0074                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0073                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
               ??___awdiv 0076                 ??___awmod 0076                    _pot0_s 002B  
                  _pot1_s 0027          ___awdiv@quotient 0078           ___awmod@divisor 0072  
         ___awmod@counter 0076                    saved_w 007E          __end_of_spiWrite 03FE  
               ??_spiInit 0075                 ??_spiRead 0072           Lcd_Set_Cursor@a 002F  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 0031           Lcd_Set_Cursor@z 0030  
 __end_of__initialization 0022            __pcstackCOMMON 0070             __end_of_setup 035E  
          _Lcd_Set_Cursor 0275                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0078                __pbssBANK0 0020     __end_of_requestValues 0275  
              __pmaintext 03CE                __pintentry 0004    __end_of_Lcd_Set_Cursor 02C1  
              ??_Lcd_Init 0076                ??_Lcd_Port 0072                   _SSPSTAT 0094  
              __stringtab 0380            _Lcd_Write_Char 0307                   _Lcd_Cmd 039E  
               ?_spiWrite 0070                   ___awdiv 010C                   ___awmod 01D0  
         ?_Lcd_Set_Cursor 0076                   __ptext1 033C                   __ptext2 03B8  
                 __ptext3 0173                   __ptext4 0229                   __ptext5 03F8  
                 __ptext6 03E1                   __ptext7 03EA                   __ptext8 009F  
                 __ptext9 0026                   _count_s 0023          ___awmod@dividend 0074  
                 _spiInit 03B8                   _spiRead 03E1    __end_of_Lcd_Write_Char 033C  
    end_of_initialization 0022                ??_spiWrite 0072                 Lcd_Port@a 0072  
               _PORTDbits 0008   separar_digitos8@decenas 0034               spiWrite@dat 0072  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0077         Lcd_Write_String@i 0032  
          _spiReceiveWait 03EA          _Lcd_Write_String 02C1       start_initialization 000F  
             __end_of_isr 03F8    __end_of_spiReceiveWait 03F1          _separar_digitos8 0026  
         Lcd_Write_Char@a 0076           Lcd_Write_Char@y 0075             ?_outputValues 0070  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 002F  
                ?_Lcd_Cmd 0070           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0077  
                ?___awdiv 0072                  ?___awmod 0072                 __pstrings 0380  
          ??_outputValues 007A                  ?_spiInit 0072                  ?_spiRead 0070  
    spiInit@sTransmitEdge 0074         interrupt_function 0004        spiInit@sDataSample 0072  
                Lcd_Cmd@a 0075               __stringbase 038F          ??_Lcd_Write_Char 0073  
                _Lcd_Init 0173                  _Lcd_Port 035E  __end_of_Lcd_Write_String 0307  
           _requestValues 0229        __end_of__stringtab 0390                  __ptext10 01D0  
                __ptext11 010C                  __ptext12 02C1                  __ptext13 0307  
                __ptext14 0275                  __ptext15 039E                  __ptext16 035E  
                __ptext17 03F1  __end_of_separar_digitos8 009F      __end_of_outputValues 010C  
          ?_requestValues 0070                  _spiWrite 03F8              spiInit@sType 0075  
       spiInit@sClockIdle 0073        Lcd_Write_Char@temp 0074                  intlevel1 0000  
        ??_spiReceiveWait 0072                 stringcode 038A                _OSCCONbits 008F  
    separar_digitos8@dig8 002F      separar_digitos8@div1 0037      separar_digitos8@div2 0032  
      Lcd_Set_Cursor@temp 0032                  stringdir 038A                  stringtab 0380  
     separar_digitos8@num 0036           ??_requestValues 0073  
